[{"path":"https://marce10.github.io/suwo/CONTRIBUTING.html","id":null,"dir":"","previous_headings":"","what":"Contributing","title":"Contributing","text":"First , thanks taking time contribute! types contributions encouraged valued. See Table Contents different ways help details project handles . Please make sure read relevant section making contribution. make lot easier us maintainers smooth experience involved. community looks forward contributions. like project, just don’t time contribute, ’s fine. easy ways support project show appreciation, also happy : - Star project - Tweet - Refer project project’s readme - Mention project local meetups tell friends/colleagues","code":""},{"path":"https://marce10.github.io/suwo/CONTRIBUTING.html","id":"table-of-contents","dir":"","previous_headings":"","what":"Table of Contents","title":"Contributing","text":"Code Conduct Question Want Contribute Reporting Bugs Suggesting Enhancements","code":""},{"path":"https://marce10.github.io/suwo/CONTRIBUTING.html","id":"code-of-conduct","dir":"","previous_headings":"","what":"Code of Conduct","title":"Contributing","text":"project everyone participating governed Code Conduct. participating, expected uphold code. Please report unacceptable behavior https://github.com/maRce10/suwo/issues/.","code":""},{"path":"https://marce10.github.io/suwo/CONTRIBUTING.html","id":"i-have-a-question","dir":"","previous_headings":"","what":"I Have a Question","title":"Contributing","text":"want ask question, assume read available Documentation. ask question, best search existing Issues might help . case found suitable issue still need clarification, can write question issue. also advisable search internet answers first. still feel need ask question need clarification, recommend following: Open https://github.com/maRce10/suwo/issues/. Provide much context can ’re running . Provide project platform versions (nodejs, npm, etc), depending seems relevant. take care issue soon possible.","code":""},{"path":"https://marce10.github.io/suwo/CONTRIBUTING.html","id":"i-want-to-contribute","dir":"","previous_headings":"","what":"I Want To Contribute","title":"Contributing","text":"contributing project, must agree authored 100% content, necessary rights content content contribute may provided project license.","code":""},{"path":[]},{"path":"https://marce10.github.io/suwo/CONTRIBUTING.html","id":"before-submitting-a-bug-report","dir":"","previous_headings":"I Want To Contribute > Reporting Bugs","what":"Before Submitting a Bug Report","title":"Contributing","text":"good bug report shouldn’t leave others needing chase information. Therefore, ask investigate carefully, collect information describe issue detail report. Please complete following steps advance help us fix potential bug fast possible. Make sure using latest version. Determine bug really bug error side e.g. using incompatible environment components/versions (Make sure read documentation. looking support, might want check section). see users experienced (potentially already solved) issue , check already bug report existing bug erro. Also make sure search internet (including Stack Overflow) see users outside GitHub community discussed issue. Collect information bug: Stack trace (Traceback) OS, Platform Version (Windows, Linux, macOS, x86, ARM) Version interpreter, compiler, SDK, runtime environment, package manager, depending seems relevant. Possibly input output Can reliably reproduce issue? can also reproduce older versions?","code":""},{"path":"https://marce10.github.io/suwo/CONTRIBUTING.html","id":"how-do-i-submit-a-good-bug-report","dir":"","previous_headings":"I Want To Contribute > Reporting Bugs","what":"How Do I Submit a Good Bug Report?","title":"Contributing","text":"must never report security related issues, vulnerabilities bugs including sensitive information issue tracker, elsewhere public. Instead sensitive bugs must sent email <>. use GitHub issues track bugs errors. run issue project: Open Issue. (Since can’t sure point whether bug , ask talk bug yet label issue.) Explain behavior expect actual behavior. Please provide much context possible describe reproduction steps someone else can follow recreate issue . usually includes code. good bug reports isolate problem create reduced test case. Provide information collected previous section. ’s filed: project team label issue accordingly. team member try reproduce issue provided steps. reproduction steps obvious way reproduce issue, team ask steps mark issue needs-repro. Bugs needs-repro tag addressed reproduced. team able reproduce issue, marked needs-fix, well possibly tags (critical), issue left implemented someone.","code":""},{"path":"https://marce10.github.io/suwo/CONTRIBUTING.html","id":"suggesting-enhancements","dir":"","previous_headings":"I Want To Contribute","what":"Suggesting Enhancements","title":"Contributing","text":"section guides submitting enhancement suggestion, including completely new features minor improvements existing functionality. Following guidelines help maintainers community understand suggestion find related suggestions.","code":""},{"path":"https://marce10.github.io/suwo/CONTRIBUTING.html","id":"before-submitting-an-enhancement","dir":"","previous_headings":"I Want To Contribute > Suggesting Enhancements","what":"Before Submitting an Enhancement","title":"Contributing","text":"Make sure using latest version. Read documentation carefully find functionality already covered, maybe individual configuration. Perform search see enhancement already suggested. , add comment existing issue instead opening new one. Find whether idea fits scope aims project. ’s make strong case convince project’s developers merits feature. Keep mind want features useful majority users just small subset. ’re just targeting minority users, consider writing add-/plugin library.","code":""},{"path":"https://marce10.github.io/suwo/CONTRIBUTING.html","id":"how-do-i-submit-a-good-enhancement-suggestion","dir":"","previous_headings":"I Want To Contribute > Suggesting Enhancements","what":"How Do I Submit a Good Enhancement Suggestion?","title":"Contributing","text":"Enhancement suggestions tracked GitHub issues. Use clear descriptive title issue identify suggestion. Provide step--step description suggested enhancement many details possible. Describe current behavior explain behavior expected see instead . point can also tell alternatives work . may want include screenshots animated GIFs help demonstrate steps point part suggestion related . can use tool record GIFs macOS Windows, tool tool Linux. Explain enhancement useful users. may also want point projects solved better serve inspiration.","code":""},{"path":"https://marce10.github.io/suwo/CONTRIBUTING.html","id":"attribution","dir":"","previous_headings":"","what":"Attribution","title":"Contributing","text":"guide based contributing.md. Make !","code":""},{"path":"https://marce10.github.io/suwo/articles/suwo.html","id":"installation","dir":"Articles","previous_headings":"","what":"Installation","title":"package overview","text":"Install latest development version GitHub:","code":"# install package remotes::install_github(\"maRce10/suwo\")  #load packages library(suwo)"},{"path":"https://marce10.github.io/suwo/articles/suwo.html","id":"basic-workflow-for-obtaining-nature-media-files","dir":"Articles","previous_headings":"","what":"Basic workflow for obtaining nature media files","title":"package overview","text":"Finding data using suwo follows basic sequence. following diagram illustrates workflow main functions involved: description step: Queries regarding species submitted one available query functions (query_repo_name()) connect five different online repositories. output queries data frame containing metadata associated media files (e.g., species name, date, location, etc, see ). multiple repositories queried, resulting metadata data frames can merged single data frame using merge_metadata() function. Check duplicate records datasets using find_duplicates() function. Candidate duplicated entries identified based matching species name, country, date, user name, geographic coordinates. User can double check candidate duplicates decide records keep, can done remove_duplicates(). Download media files associated metadata using download_media() function. Users can update datasets new records using update_metadata() function.","code":""},{"path":"https://marce10.github.io/suwo/articles/suwo.html","id":"obtaining-metadata-the-query-functions","dir":"Articles","previous_headings":"","what":"Obtaining metadata: the query functions","title":"package overview","text":"following table summarizes available suwo query functions types metadata retrieve: Table 1: Summary query functions. example queries: Images Sarapiqui Heliconia (Heliconia sarapiquensis) iNaturalist (print first 4 rows output data frame):  Harpy eagles (Harpia harpyja) audio recordings Wikiaves:  Common raccoon (Procyon lotor) videos GBIF:  default query function return 13 basic metadata fields associated media files. definition field: repository: Name repository format: Type media file (e.g., sound, photo, video) key: Unique identifier media file repository species: Species name associated media file (Note taxonomic authority may vary among repositories) date*: Date media file recorded/photographed (YYYY-MM-DD format YYYY year available) time*: Time media file recorded/photographed (HH:MM format) user_name*: Name user uploaded media file country*: Country media file recorded/photographed locality*: Locality media file recorded/photographed latitude*: Latitude location media file recorded/photographed (decimal degrees) longitude*: Longitude location media file recorded/photographed (decimal degrees) file_url: URL link media file (used download media files) file_extension: Extension media file (e.g., .mp3, .jpg, .mp4) * Can contain missing values (NAs) Users can also download available metadata setting argument all_data = TRUE. additional metadata fields, top basic fields, retrieved query function: Table 2: Additional metadata per query function. Obtaining raw data default package standardizes information basic fields (detailed ) order facilitate compilation metadata multiple repositories. However, cases may result loss information. instance, repositories allow users provide “morning” valid time value, converted NAs suwo. cases, users can retrieve original data setting raw_data = TRUE query functions /global options (options(raw_data = TRUE)). Note subsequent data manipulation functions (e.g., merge_metadata(), find_duplicates(), etc) work properly basic fields standardized. code examplifies common use query functions, applies also function query_gbif(). following sections provide details two query functions require special considerations: query_macaulay() query_xenocanto().","code":"# Load suwo package library(suwo) # Load suwo package library(suwo)  h_sarapiquensis <- query_inaturalist(species = \"Heliconia sarapiquensis\", format = \"image\")  head(h_sarapiquensis, 4) h_harpyja <- query_wikiaves(species = \"Harpia harpyja\", format = \"sound\")  head(h_harpyja, 4) p_lotor <- query_gbif(species = \"Procyon lotor\", format = \"video\")  head(p_lotor, 4)"},{"path":[]},{"path":"https://marce10.github.io/suwo/articles/suwo.html","id":"interactive-retrieval-of-metadata","dir":"Articles","previous_headings":"Obtaining metadata: the query functions > query_macaulay()","what":"Interactive retrieval of metadata","title":"package overview","text":"query_macaulay() interactive function. means users run query function opens browser window Macaulay Library’s search page, users must download .csv file metadata. example query strip-throated hermit (Phaethornis striigularis) videos: Users must click “Export” button save .csv file metadata:  tips using function properly: file must saved directory specified path argument function (default current working directory) file saved overwriting pre-existing file (.e. file name) function detect function proceed file saved Users must log Macaulay Library/eBird account order access large batches observations saving file, function read file return data frame metadata. print first 4 rows output data frame:","code":"p_striigularis <- query_macaulay(species = \"Phaethornis striigularis\", format = \"video\") head(p_striigularis, 4)"},{"path":"https://marce10.github.io/suwo/articles/suwo.html","id":"bypassing-record-limit","dir":"Articles","previous_headings":"Obtaining metadata: the query functions > query_macaulay()","what":"Bypassing record limit","title":"package overview","text":"Even logged , maximum 10000 records per query can returned. can bypassed using ‘dates’ argument split search sequence shorter date ranges. rationale splitting search date ranges, users can download multiple .csv files, combined function single metadata data frame. course users must download csv data range. following code looks photos costa’s hummingbird (Calypte costae). Macaulay Library hosts 30000 costa’s hummingbird records, need split query multiple date ranges: Users can check Macaulay Library website many records available species interest (see image ) decide split search date ranges accordingly sub-query less 10000 records.","code":"# test a query with more than 10000 results paging by date cal_cos <- query_macaulay(   species = \"Calypte costae\",   format = \"image\",   path = tempdir(),   dates = c(1976, 2019, 2022, 2024, 2025, 2026) )"},{"path":[]},{"path":"https://marce10.github.io/suwo/articles/suwo.html","id":"api-key","dir":"Articles","previous_headings":"Obtaining metadata: the query functions > query_xenocanto()","what":"API key","title":"package overview","text":"Xeno-Canto requires users obtain free API key use API v3. Users can get API key creating account Xeno-Canto’s registering page. users API key, can use query_xenocanto() function providing api_key argument. example query Spix’s disc-winged bat (Thyroptera tricolor) audio recordings:","code":"# replace \"YOUR_XC_API_KEY\" with your key t_tricolor <- query_xenocanto(species = \"Thyroptera tricolor\", api_key = \"YOUR_XC_API_KEY\")  head(t_tricolor, 4)"},{"path":"https://marce10.github.io/suwo/articles/suwo.html","id":"special-queries","dir":"Articles","previous_headings":"Obtaining metadata: the query functions","what":"Special queries","title":"package overview","text":"query_xenocanto() allows users perform special queries specifying additional query tags. Users can also search country, taxonomy (taxonomic group, family, genus, subspecies), geography (country, location, geographic coordinates) date, sound type (e.g. female song, calls) recording properties (quality, length, sampling rate) (see list available tags ). example query audio recordings pale-striped poison frog (Ameerega hahneli, ’sp:“Ameerega hahneli”) French Guiana (cnt:“French Guiana”) highest recording quality (q:“”):","code":"# replace \"YOUR_XC_API_KEY\" with your key a_hahneli <- query_xenocanto(species = 'sp:\"Ameerega hahneli\" cnt:\"French Guiana\" q:\"A\"', api_key = \"YOUR_XC_API_KEY\")  head(a_hahneli, 4)"},{"path":"https://marce10.github.io/suwo/articles/suwo.html","id":"update-metadata","dir":"Articles","previous_headings":"","what":"Update metadata","title":"package overview","text":"update_metadata() function allows users update previous query add new information corresponding repository original search. function takes input data frame previously obtained query function (.e. query_reponame()) returns data frame similar input new data appended. show case function, first query metadata Eisentraut’s Bow-winged Grasshopper sounds iNaturalist. Let’s assume initial query done ago want update include new records might added since . following code removes observations recorded 2024-12-31 simulate old query:","code":"# initial query c_eisentrauti <- query_inaturalist(species = \"Chorthippus eisentrauti\")  head(c_eisentrauti, 4) # exclude new observations (simulate old data) old_c_eisentrauti <- c_eisentrauti[c_eisentrauti$date <= \"2024-12-31\" | is.na(c_eisentrauti$date), ]  # update \"old\" data upd_c_eisentrauti <- update_metadata(metadata = old_c_eisentrauti)  # compare number of records nrow(old_c_eisentrauti) == nrow(upd_c_eisentrauti) [1] FALSE"},{"path":"https://marce10.github.io/suwo/articles/suwo.html","id":"combine-metadata-from-multiple-repositories","dir":"Articles","previous_headings":"","what":"Combine metadata from multiple repositories","title":"package overview","text":"merge_metadata() function allows users combine metadata data frames obtained multiple query functions single data frame. function match basic columns data frames. Data additional columns (instance using all_data = TRUE query) combined column names different repositories match. function return data frame includes new column called source indicating name original metadata data frame: Note multi-repository query, query functions use search species (.e. species name) media format (e.g., sound, image, video). facilitate , users can set global options species format need specify query function:","code":"truf_xc <- query_xenocanto(species = \"Turdus rufiventris\",                              format = \"sound\",                              api_key = \"YOUR_XC_API_KEY\") truf_gbf <- query_gbif(species = \"Turdus rufiventris\", format = \"sound\") truf_ml <- query_macaulay(species = \"Turdus rufiventris\",                           format = \"sound\",                           path = tempdir())  # merge metadata merged_metadata <- merge_metadata(truf_xc, truf_gbf, truf_ml)  head(merged_metadata, 4) options(species = \"Turdus rufiventris\", format = \"sound\") truf_xc <- query_xenocanto(api_key = \"YOUR_XC_API_KEY\") truf_gbf <- query_gbif() truf_ml <- query_macaulay(path = tempdir())  # merge metadata merged_metadata <- merge_metadata(truf_xc, truf_gbf, truf_ml)"},{"path":"https://marce10.github.io/suwo/articles/suwo.html","id":"find-and-remove-duplicated-records","dir":"Articles","previous_headings":"","what":"Find and remove duplicated records","title":"package overview","text":"compiling data multiple repositories, duplicated media records common issue. duplicates occur data sharing repositories like Xeno-Canto GBIF, users upload file multiple platforms. help users efficiently identify duplicate records, suwo provides find_duplicates() function. find_duplicates() function helps users identify potential duplicate records metadata data frames. Duplicates identified based matching species name, country, date, user name, locality. function uses fuzzy matching approach account minor variations data (e.g., typos, different location formats, etc).output data frame candidate duplicate records, allowing users review decide records keep. example look possible duplicates merged metadata data frame previous section: Note find_duplicates() function adds new column called “duplicate_group” output data frame. column assigns unique identifier group potential duplicates, allowing users easily identify review . instance, example , records duplicated group 75 belong user, recorded date time country: Also note locality exactly records, fuzzy matching approach used find_duplicates() able identify potential duplicates. users reviewed candidate duplicates, can use remove_duplicates() function eliminate unwanted duplicates metadata data frames. function takes input metadata data frame (either original query results output find_duplicates()) vector row numbers indicating records remove: output data frame similar input without specified duplicate records: duplicates found, one observation group duplicates retained output data frame. However, multiple observations repository labeled duplicates, default (same_repo = FALSE) retained output data frame. useful can expected observations repository true duplicates (e.g. different recordings uploaded Xeno-Canto date, time location user), rather documented enough precision told apart. behavior can modified. same_repo = TRUE, one duplicated observations repository retained output data frame (excluded). function give priority repositories media downloading straightforward (.e. Xeno-Canto, GBIF), can modified argument ‘repo_priority’.","code":"# find duplicates dups_merged_metadata <- find_duplicates(merged_metadata)  # look first 6 columns head(dups_merged_metadata) subset(dups_merged_metadata, duplicate_group == 75) # remove duplicates dedup_metadata <- remove_duplicates(dups_merged_metadata) # look at first 4 columns of deduplicated metadata head(dedup_metadata, 4)"},{"path":"https://marce10.github.io/suwo/articles/suwo.html","id":"download-media-files","dir":"Articles","previous_headings":"","what":"Download media files","title":"package overview","text":"last step workflow download media files associated metadata. can done using download_media() function, takes input metadata data frame (obtained query function metadata managing functions) downloads media files specified directory. example download images query zambian slender Caesar (Amanita zambiana) (mushroom) GBIF: output function data frame similar input metadata two additional columns indicating file name downloaded files (‘downloaded_file_name’) result download attempt (‘download_status’, values “success”, ‘failed’, ‘already (downloaded)’ ‘overwritten’). print first 4 rows output data frame: … check files saved path supplied: Note name downloaded files includes species name, abbreviation repository name unique record key. one media file associated record, sequential number added end file name. multipanel plot 6 downloaded images (just illustration purpose):  Users can also save downloaded files sub-directories argument folder_by. argument takes character factor column names metadata field (column metadata data frame) create sub-directories within main download directory (suplied argument path). instance, following code searches/downloads images longspined porcupinefish (Diodon holocanthus) GBIF, saves images sub-directories country (simplicity 6 ): case ‘downloaded_file_name’ column include sub-directory name: multipanel plot 6 downloaded images (just fun):","code":"# query GBIF for Amanita zambiana images a_zam <- query_gbif(species = \"Amanita zambiana\", format = \"image\")  # create folder for images out_folder <- file.path(tempdir(), \"amanita_zambiana\") dir.create(out_folder)  # download media files to a temporary directory azam_files <- download_media(metadata = a_zam, path = out_folder) head(azam_files, 4) fs::dir_tree(path = out_folder)  /tmp/RtmpB3zj2R/amanita_zambiana  ├──  Amanita_zambiana-GBIF3759537817-1.jpeg  ├──  Amanita_zambiana-GBIF3759537817-2.jpeg  ├──  Amanita_zambiana-GBIF4430877067-1.jpeg  ├──  Amanita_zambiana-GBIF4430877067-2.jpeg  ├──  Amanita_zambiana-GBIF4430877067-3.jpeg  └──  Amanita_zambiana-GBIF5104283819.jpeg  # create a 6 pannel plot of the downloaded images par(mfrow = c(2, 3), mar = c(1, 1, 2, 1))  for (i in 1:6) {   img <- jpeg::readJPEG(file.path(out_folder, azam_files$downloaded_file_name[i]))   plot(     1:2,     type = 'n',     axes = FALSE   )   rasterImage(img, 1, 1, 2, 2)   title(main = paste(     azam_files$country[i],     azam_files$date[i],     sep = \"\\n\"   )) } # query GBIF for longspined porcupinefish images d_holocanthus <- query_gbif(species = \"Diodon holocanthus\", format = \"image\")  # keep only JPEG records (for simplicity for this vignette) d_holocanthus <- d_holocanthus[d_holocanthus$file_extension == \"jpeg\", ]  # select 6 random JPEG records set.seed(666) d_holocanthus <- d_holocanthus[sample(1:nrow(d_holocanthus), 6),]  # create folder for images out_folder <- file.path(tempdir(), \"diodon_holocanthus\") dir.create(out_folder)  # download media files creating sub-directories by country dhol_files <- download_media(metadata = d_holocanthus,                              path = out_folder,                              folder_by = \"country\") fs::dir_tree(path = out_folder)  /tmp/RtmpB3zj2R/diodon_holocanthus  ├──  Cabo Verde  │   └──  Diodon_holocanthus-GBIF3985886532.jpeg  ├──  Cayman Islands  │   └──  Diodon_holocanthus-GBIF5827468492.jpeg  ├──  Chinese Taipei  │   └──  Diodon_holocanthus-GBIF5206745484.jpeg  ├──  Indonesia  │   └──  Diodon_holocanthus-GBIF4953086522.jpeg  └──  United States of America      ├──  Diodon_holocanthus-GBIF1270050026.jpeg      └──  Diodon_holocanthus-GBIF4935688405.jpeg  dhol_files$downloaded_file_name [1] \"United States of America/Diodon_holocanthus-GBIF4935688405.jpeg\" [2] \"United States of America/Diodon_holocanthus-GBIF1270050026.jpeg\" [3] \"Cabo Verde/Diodon_holocanthus-GBIF3985886532.jpeg\"               [4] \"Cayman Islands/Diodon_holocanthus-GBIF5827468492.jpeg\"           [5] \"Chinese Taipei/Diodon_holocanthus-GBIF5206745484.jpeg\"           [6] \"Indonesia/Diodon_holocanthus-GBIF4953086522.jpeg\" # create a 6 pannel plot of the downloaded images par(mfrow = c(2, 3), mar = c(1, 1, 2, 1))  for (i in 1:6) {   img <- jpeg::readJPEG(file.path(out_folder, dhol_files$downloaded_file_name[i]))   plot(     1:2,     type = 'n',     axes = FALSE   )   rasterImage(img, 1, 1, 2, 2)   title(main = paste(     dhol_files$country[i],     dhol_files$date[i],     sep = \"\\n\"   )) }"},{"path":"https://marce10.github.io/suwo/articles/suwo.html","id":"session-information","dir":"Articles","previous_headings":"Download media files","what":"Session information","title":"package overview","text":"","code":"R version 4.5.1 (2025-06-13) Platform: x86_64-pc-linux-gnu Running under: Ubuntu 24.04.3 LTS  Matrix products: default BLAS:   /usr/lib/x86_64-linux-gnu/openblas-pthread/libblas.so.3  LAPACK: /usr/lib/x86_64-linux-gnu/openblas-pthread/libopenblasp-r0.3.26.so;  LAPACK version 3.12.0  locale:  [1] LC_CTYPE=C.UTF-8       LC_NUMERIC=C           LC_TIME=C.UTF-8        LC_COLLATE=C.UTF-8      [5] LC_MONETARY=C.UTF-8    LC_MESSAGES=C.UTF-8    LC_PAPER=C.UTF-8       LC_NAME=C               [9] LC_ADDRESS=C           LC_TELEPHONE=C         LC_MEASUREMENT=C.UTF-8 LC_IDENTIFICATION=C     time zone: UTC tzcode source: system (glibc)  attached base packages: [1] stats     graphics  grDevices utils     datasets  methods   base       other attached packages: [1] kableExtra_1.4.0  suwo_0.1.0        htmlwidgets_1.6.4 knitr_1.50         loaded via a namespace (and not attached):  [1] viridisLite_0.4.2      farver_2.1.2           blob_1.2.4             viridis_0.6.5           [5] S7_0.2.0               bitops_1.0-9           fastmap_1.2.0          RCurl_1.98-1.17         [9] digest_0.6.37          rpart_4.1.24           timechange_0.3.0       lifecycle_1.0.4        [13] survival_3.8-3         RSQLite_2.4.3          magrittr_2.0.4         compiler_4.5.1         [17] rlang_1.1.6            sass_0.4.10            tools_4.5.1            yaml_2.3.10            [21] data.table_1.17.8      bit_4.6.0              curl_7.0.0             xml2_1.4.1             [25] RColorBrewer_1.1-3     desc_1.4.3             nnet_7.3-20            grid_4.5.1             [29] xtable_1.8-4           e1071_1.7-16           future_1.67.0          ada_2.0-5              [33] ggplot2_4.0.0          globals_0.18.0         scales_1.4.0           MASS_7.3-65            [37] cli_3.6.5              crayon_1.5.3           rmarkdown_2.30         ragg_1.5.0             [41] generics_0.1.4         rstudioapi_0.17.1      RecordLinkage_0.4-12.5 future.apply_1.20.0    [45] httr_1.4.7             pbapply_1.7-4          DBI_1.2.3              cachem_1.1.0           [49] proxy_0.4-27           stringr_1.5.2          splines_4.5.1          parallel_4.5.1         [53] vctrs_0.6.5            Matrix_1.7-3           jsonlite_2.0.0         bit64_4.6.0-1          [57] listenv_0.9.1          systemfonts_1.3.1      jpeg_0.1-11            evd_2.3-7.1            [61] jquerylib_0.1.4        glue_1.8.0             parallelly_1.45.1      pkgdown_2.1.3          [65] codetools_0.2-20       lubridate_1.9.4        stringi_1.8.7          gtable_0.3.6           [69] tibble_3.3.0           pillar_1.11.1          htmltools_0.5.8.1      ipred_0.9-15           [73] lava_1.8.1             R6_2.6.1               ff_4.5.2               textshaping_1.0.4      [77] evaluate_1.0.5         lattice_0.22-7         backports_1.5.0        memoise_2.0.1          [81] bslib_0.9.0            class_7.3-23           Rcpp_1.1.0             checkmate_2.3.3        [85] svglite_2.2.2          gridExtra_2.3          prodlim_2025.04.28     xfun_0.53              [89] pkgconfig_2.0.3        fs_1.6.6"},{"path":"https://marce10.github.io/suwo/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Marcelo Araya-Salas. Author, maintainer. Jorge Elizondo-Calvo. Author.","code":""},{"path":"https://marce10.github.io/suwo/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Araya-Salas M, Elizondo-Calvo J (2025). suwo: Access Nature Media Repositories R. R package version 0.1.0, https://marce10.github.io/suwo/.","code":"@Manual{,   title = {suwo: Access Nature Media Repositories Through R},   author = {Marcelo Araya-Salas and Jorge Elizondo-Calvo},   year = {2025},   note = {R package version 0.1.0},   url = {https://marce10.github.io/suwo/}, }"},{"path":"https://marce10.github.io/suwo/index.html","id":"suwo-access-nature-media-repositories-through-r","dir":"","previous_headings":"","what":"Access Nature Media Repositories Through R","title":"Access Nature Media Repositories Through R","text":"suwo intended streamline searching/downloading nature media files (e.g. audios, photos) online repositories. suwo offers functions critical steps acquisition data necessary develop methods require large amount data. main features package : Obtaining media metadata online repositories Downloading associated media files Updating data sets new records ⚠️PACKAGE EARLY DEVELOPMENTAL STAGE MODIFIED FREQUENTLY.⚠️ currently searching new online repositories included package. Please open new issue want suggest new repository.","code":""},{"path":"https://marce10.github.io/suwo/index.html","id":"installing-suwo","dir":"","previous_headings":"","what":"Installing suwo","title":"Access Nature Media Repositories Through R","text":"Install/load package CRAN follows: install latest developmental version github need R package remotes:","code":"# From CRAN would be # install.packages(\"suwo\")  # load package library(suwo) remotes::install_github(\"maRce10/suwo\")  #load package library(suwo)"},{"path":"https://marce10.github.io/suwo/index.html","id":"intended-use-and-responsible-practices","dir":"","previous_headings":"","what":"Intended use and responsible practices","title":"Access Nature Media Repositories Through R","text":"suwo package designed exclusively non-commercial, scientific purposes, including research, education, conservation. commercial use data media retrieved package strictly prohibited unless explicit, separate permission granted directly original source platforms content creators. Users obligated comply specific terms service data use policies source database, often mandate attribution similarly restrict commercial application. package developers assume liability misuse retrieved data violations third-party terms service. Take look package vignette overview main features packages.","code":""},{"path":"https://marce10.github.io/suwo/index.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Access Nature Media Repositories Through R","text":"Please cite suwo follows: Araya-Salas, M., & Elizondo-Calvo, J. 2023. suwo: access nature media repositories R. R package version 0.1.0.","code":""},{"path":"https://marce10.github.io/suwo/reference/check_gbif_datasets.html","id":null,"dir":"Reference","previous_headings":"","what":"Access 'gbif' dataset information — check_gbif_datasets","title":"Access 'gbif' dataset information — check_gbif_datasets","text":"check_gbif_datasets searches dataset information gbif.","code":""},{"path":"https://marce10.github.io/suwo/reference/check_gbif_datasets.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Access 'gbif' dataset information — check_gbif_datasets","text":"","code":"check_gbif_datasets(path = \".\")"},{"path":"https://marce10.github.io/suwo/reference/check_gbif_datasets.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Access 'gbif' dataset information — check_gbif_datasets","text":"path Directory path output .csv file saved. default downloaded current working directory (\".\").","code":""},{"path":"https://marce10.github.io/suwo/reference/check_gbif_datasets.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Access 'gbif' dataset information — check_gbif_datasets","text":"returns dataset csv gbif","code":""},{"path":"https://marce10.github.io/suwo/reference/check_gbif_datasets.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Access 'gbif' dataset information — check_gbif_datasets","text":"function queries dataset info open-access online repository gbif. saves csv file supplied `path` directory (~42 MB). file contains 89000 rows datasets explore.","code":""},{"path":"https://marce10.github.io/suwo/reference/check_gbif_datasets.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Access 'gbif' dataset information — check_gbif_datasets","text":"GBIF.org (2024), GBIF Home Page. Available : https://www.gbif.org [13 January 2020].","code":""},{"path":[]},{"path":"https://marce10.github.io/suwo/reference/check_gbif_datasets.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Access 'gbif' dataset information — check_gbif_datasets","text":"Marcelo Araya-Salas (marcelo.araya@ucr.ac.cr)","code":""},{"path":"https://marce10.github.io/suwo/reference/check_gbif_datasets.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Access 'gbif' dataset information — check_gbif_datasets","text":"","code":"if (FALSE) { # \\dontrun{ # download dataset information check_gbif_datasets() } # }"},{"path":"https://marce10.github.io/suwo/reference/download_media.html","id":null,"dir":"Reference","previous_headings":"","what":"Download media files from repositories — download_media","title":"Download media files from repositories — download_media","text":"download_media downloads recordings metadata Xeno-Canto, wikiaves gbif.","code":""},{"path":"https://marce10.github.io/suwo/reference/download_media.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Download media files from repositories — download_media","text":"","code":"download_media(   metadata,   path = \".\",   pb = getOption(\"pb\", TRUE),   verbose = getOption(\"verbose\", TRUE),   cores = getOption(\"mc.cores\", 1),   overwrite = FALSE,   folder_by = NULL )"},{"path":"https://marce10.github.io/suwo/reference/download_media.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Download media files from repositories — download_media","text":"metadata data frame previously obtained suwo query function (.e. `query_reponame()`). path Directory path output media files saved. default files saved current working directory (\".\"). pb Logical argument control progress bar shown. Default TRUE. Can set globally current R session via \"pb\" option ( options(pb = TRUE)). verbose Logical argument determines text shown console. Default TRUE. Can set globally current R session via \"verbose\" option ( options(verbose = TRUE)). cores Numeric vector length 1. Controls whether parallel computing applied specifying number cores used. Default 1 (.e. parallel computing). Can set globally current R session via \"mc.cores\" option (e.g.  options(mc.cores = 2)). Note repositories might support parallel queries IP address might identified denial--service cyberattack. overwrite Logical. TRUE, existing files (\"path\") name overwritten. Default FALSE. folder_by Character string name character factor column metadata data frame. supplied function use unique values column create subfolders within \"path\" files downloaded corresponding folder. default subfolders created files saved path provided. Missing values (NAs) saved folder called paste0(\"unknown_\", folder_by). Special characters allowed folder names modified removed. folder names already exist \"path\", used .","code":""},{"path":"https://marce10.github.io/suwo/reference/download_media.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Download media files from repositories — download_media","text":"Downloads media files supplied directory path (\"path\") returns (invisibly) input data frame two additional columns: downloaded_file_name name downloaded file (downloaded already directory), download_status result download process file (either \"saved\", \"overwritten\", \"already (downloaded)\", \"failed\").","code":""},{"path":"https://marce10.github.io/suwo/reference/download_media.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Download media files from repositories — download_media","text":"function take output data frame \"query_x()\" functions download associated media files. function download files single directory (argument \"path\"). File downloading process can interrupted resume later long working directory . default missing files downloaded resuming. Users need rerun function call. Can also used updated query output (see update_metadata) add new media files existing media pool.","code":""},{"path":[]},{"path":"https://marce10.github.io/suwo/reference/download_media.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Download media files from repositories — download_media","text":"Marcelo Araya-Salas (marcelo.araya@ucr.ac.cr)","code":""},{"path":"https://marce10.github.io/suwo/reference/download_media.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Download media files from repositories — download_media","text":"","code":"if (FALSE) { # \\dontrun{   phae_anth <- query_xenocanto(species = 'Phaethornis anthophilus', all_data = FALSE)    # donwload the first to files   phae_anth_downl <- download_media(metadata = phae_anth[1:2, ], path = tempdir()) } # }"},{"path":"https://marce10.github.io/suwo/reference/find_duplicates.html","id":null,"dir":"Reference","previous_headings":"","what":"Find duplicated entries in metadata — find_duplicates","title":"Find duplicated entries in metadata — find_duplicates","text":"find_duplicates detect possible duplicated entries merged metadata several repositories.","code":""},{"path":"https://marce10.github.io/suwo/reference/find_duplicates.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Find duplicated entries in metadata — find_duplicates","text":"","code":"find_duplicates(metadata, sort = TRUE)"},{"path":"https://marce10.github.io/suwo/reference/find_duplicates.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Find duplicated entries in metadata — find_duplicates","text":"metadata data frame obtained combining output metadata two suwo query function using `merge_metadata()` function. Data frames obtained single suwo query function can also used duplicates really expected within repository. data frame must following columns: `user_name`, `locality`, `repository`, `country`, `format`, `time`, `date`. sort Logical argument indicating output data frame sorted `duplicate_group` column. group potential duplicates together output data frame. Default `TRUE`.","code":""},{"path":"https://marce10.github.io/suwo/reference/find_duplicates.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Find duplicated entries in metadata — find_duplicates","text":"single data frame data input data frames combined additional column named `duplicate_group` indicating potential duplicates common index. Entries without potential duplicates labeled `NA` new column.","code":""},{"path":"https://marce10.github.io/suwo/reference/find_duplicates.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Find duplicated entries in metadata — find_duplicates","text":"function compares information entries combined metadata data frame labels possible duplicates common index new column named `duplicate_group`. comparison based similarity following fields: `user_name`, `locality`, `time` `country`. rows missing data fields considered. function uses `RecordLinkage` package perform fuzzy matching comparison identify potential duplicates based predefined similarity thresholds. function spots duplicates different repositories assumes duplicates `format` `date`. function useful curating data obtained merging data multiple sources, observation might recorded different repositories. common issue citizen science repositories, users might upload observation different platforms. can also occur repositories automatically share data repositories, particularly GBIF.","code":""},{"path":"https://marce10.github.io/suwo/reference/find_duplicates.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Find duplicated entries in metadata — find_duplicates","text":"Marcelo Araya-Salas (marcelo.araya@ucr.ac.cr)","code":""},{"path":"https://marce10.github.io/suwo/reference/find_duplicates.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Find duplicated entries in metadata — find_duplicates","text":"","code":"if (FALSE) { # \\dontrun{ # get metadata from 2 repos gb <- query_gbif(species = \"Turdus rufiventris\", format =  \"sound\") xc <- query_xenocanto(species = \"Turdus rufiventris\")  # combine metadata merged_metadata <- merge_metadata(xc, gb)  # find duplicates label_dup_metadata <- find_duplicates(metadata = merged_metadata) } # }"},{"path":"https://marce10.github.io/suwo/reference/map_locations.html","id":null,"dir":"Reference","previous_headings":"","what":"Maps of instances of observations by species — map_locations","title":"Maps of instances of observations by species — map_locations","text":"map_locations creates maps visualize geographic spread suwo   recordings.","code":""},{"path":"https://marce10.github.io/suwo/reference/map_locations.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Maps of instances of observations by species — map_locations","text":"","code":"map_locations(   metadata,   cluster = FALSE,   palette = viridis::viridis,   by = \"species\" )"},{"path":"https://marce10.github.io/suwo/reference/map_locations.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Maps of instances of observations by species — map_locations","text":"metadata data frame previously obtained suwo query function (.e. `query_reponame()`). cluster Logical control icons clustered locality. Default FALSE. palette Color palette function used location markers. Name column used coloring markers. Default \"species\".","code":""},{"path":"https://marce10.github.io/suwo/reference/map_locations.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Maps of instances of observations by species — map_locations","text":"interacrive map locations observations.","code":""},{"path":"https://marce10.github.io/suwo/reference/map_locations.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Maps of instances of observations by species — map_locations","text":"function creates maps visualizing geographic spread observations. Note recordings geographic coordinates displayed.","code":""},{"path":"https://marce10.github.io/suwo/reference/map_locations.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Maps of instances of observations by species — map_locations","text":"Araya-Salas, M., & Smith-Vidaurre, G. (2017). warbleR: R package streamline analysis animal acoustic signals. Methods Ecology Evolution, 8(2), 184-191.","code":""},{"path":"https://marce10.github.io/suwo/reference/map_locations.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Maps of instances of observations by species — map_locations","text":"Marcelo Araya-Salas (marcelo.araya@ucr.ac.cr) Grace Smith Vidaurre","code":""},{"path":"https://marce10.github.io/suwo/reference/map_locations.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Maps of instances of observations by species — map_locations","text":"","code":"if (FALSE) { # \\dontrun{ # search in xeno-canto metadata <- query_xenocanto(species = \"Phaethornis anthophilus\")  # create map map_locations(metadata) } # }"},{"path":"https://marce10.github.io/suwo/reference/merge_metadata.html","id":null,"dir":"Reference","previous_headings":"","what":"Merge metadata data frames — merge_metadata","title":"Merge metadata data frames — merge_metadata","text":"merge_metadata merges metadata data frames suwo queries.","code":""},{"path":"https://marce10.github.io/suwo/reference/merge_metadata.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Merge metadata data frames — merge_metadata","text":"","code":"merge_metadata(...)"},{"path":"https://marce10.github.io/suwo/reference/merge_metadata.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Merge metadata data frames — merge_metadata","text":"... two data frames (one separate entry) referring metadata obtained suwo query functions (`query_x()`).","code":""},{"path":"https://marce10.github.io/suwo/reference/merge_metadata.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Merge metadata data frames — merge_metadata","text":"single data frame data input data frames combined additional column named `source` indicating original data frame row originated.","code":""},{"path":"https://marce10.github.io/suwo/reference/merge_metadata.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Merge metadata data frames — merge_metadata","text":"function combines metadata multiple sources (e.g. WikiAves xeno-canto) single data frame easier analysis comparison. input data frame must obtained one suwo query functions (e.g., `query_wikiaves()`, `query_xenocanto()`, etc.) `raw_data = FALSE`.","code":""},{"path":"https://marce10.github.io/suwo/reference/merge_metadata.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Merge metadata data frames — merge_metadata","text":"Marcelo Araya-Salas (marcelo.araya@ucr.ac.cr)","code":""},{"path":"https://marce10.github.io/suwo/reference/merge_metadata.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Merge metadata data frames — merge_metadata","text":"","code":"if (FALSE) { # \\dontrun{  # get metadata from 2 repos   wa <- query_wikiaves(species = 'Glaucis dohrnii', format =  \"sound\")   xc <- query_xenocanto(species = 'Glaucis dohrnii')    # combine metadata   merged_mt <- merge_metadata(wa, xc) } # }"},{"path":"https://marce10.github.io/suwo/reference/query_gbif.html","id":null,"dir":"Reference","previous_headings":"","what":"Access 'gbif' recordings and metadata — query_gbif","title":"Access 'gbif' recordings and metadata — query_gbif","text":"query_gbif searches metadata gbif.","code":""},{"path":"https://marce10.github.io/suwo/reference/query_gbif.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Access 'gbif' recordings and metadata — query_gbif","text":"","code":"query_gbif(   species = getOption(\"species\"),   format = c(\"sound\", \"image\", \"video\", \"interactive resource\"),   cores = getOption(\"mc.cores\", 1),   pb = getOption(\"pb\", TRUE),   verbose = getOption(\"verbose\", TRUE),   dataset = NULL,   all_data = getOption(\"all_data\", FALSE),   raw_data = getOption(\"raw_data\", FALSE) )"},{"path":"https://marce10.github.io/suwo/reference/query_gbif.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Access 'gbif' recordings and metadata — query_gbif","text":"species Character string scientific name species format: \"Genus epithet\". Required. Can set globally current R session via \"term\" option (e.g. options(term = \"Hypsiboas rufitelus\")). format Character vector media format query . Options 'sound', 'image', 'video' 'interactive resource'. Required. cores Numeric vector length 1. Controls whether parallel computing applied specifying number cores used. Default 1 (.e. parallel computing). Can set globally current R session via \"mc.cores\" option (e.g.  options(mc.cores = 2)). Note repositories might support parallel queries IP address might identified denial--service cyberattack. pb Logical argument control progress bar shown. Default TRUE. Can set globally current R session via \"pb\" option ( options(pb = TRUE)). verbose Logical argument determines text shown console. Default TRUE. Can set globally current R session via \"verbose\" option ( options(verbose = TRUE)). dataset see https://www.gbif.org/dataset/search?q=. all_data Logical argument determines data available database shown results search. Default FALSE. Can set globally current R session via \"all_data\" option ( options(all_data = TRUE)). raw_data Logical argument determines raw data API returned (e.g. without manipulation). Default FALSE. Can set globally current R session via \"raw_data\" option ( options(raw_data = TRUE)). TRUE  all_data set TRUE internally. Useful developers, users suspect data mishandled processing (.e. date information lost). Note metadata obtained raw_data = TRUE standardized, suwo functions downstream steps work .","code":""},{"path":"https://marce10.github.io/suwo/reference/query_gbif.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Access 'gbif' recordings and metadata — query_gbif","text":"function returns data frame metadata media files matching search criteria. all_data = TRUE, metadata fields (columns) returned. raw_data = TRUE, raw data obtained repository returned (without formatting).","code":""},{"path":"https://marce10.github.io/suwo/reference/query_gbif.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Access 'gbif' recordings and metadata — query_gbif","text":"function queries species observation info open-access online repository gbif. GBIF (Global Biodiversity Information Facility) international network data infrastructure funded world's governments aimed providing open access data types life Earth. Note records returned function duplicates records returned suwo functions (e.g., query_inaturalist).","code":""},{"path":"https://marce10.github.io/suwo/reference/query_gbif.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Access 'gbif' recordings and metadata — query_gbif","text":"GBIF.org (2024), GBIF Home Page. Available : https://www.gbif.org [13 January 2020].","code":""},{"path":[]},{"path":"https://marce10.github.io/suwo/reference/query_gbif.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Access 'gbif' recordings and metadata — query_gbif","text":"Marcelo Araya-Salas (marcelo.araya@ucr.ac.cr)","code":""},{"path":"https://marce10.github.io/suwo/reference/query_gbif.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Access 'gbif' recordings and metadata — query_gbif","text":"","code":"if (FALSE) { # \\dontrun{ # search sound files View(df1) } # }"},{"path":"https://marce10.github.io/suwo/reference/query_inaturalist.html","id":null,"dir":"Reference","previous_headings":"","what":"Access 'inaturalist' recordings and metadata — query_inaturalist","title":"Access 'inaturalist' recordings and metadata — query_inaturalist","text":"query_inaturalist searches metadata inaturalist.","code":""},{"path":"https://marce10.github.io/suwo/reference/query_inaturalist.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Access 'inaturalist' recordings and metadata — query_inaturalist","text":"","code":"query_inaturalist(   species = getOption(\"species\"),   cores = getOption(\"mc.cores\", 1),   pb = getOption(\"pb\", TRUE),   verbose = getOption(\"verbose\", TRUE),   format = c(\"sound\", \"image\"),   identified = FALSE,   verifiable = FALSE,   all_data = getOption(\"all_data\", FALSE),   raw_data = getOption(\"raw_data\", FALSE) )"},{"path":"https://marce10.github.io/suwo/reference/query_inaturalist.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Access 'inaturalist' recordings and metadata — query_inaturalist","text":"species Character string scientific name species format: \"Genus epithet\". Required. Can set globally current R session via \"term\" option (e.g. options(term = \"Hypsiboas rufitelus\")). cores Numeric vector length 1. Controls whether parallel computing applied specifying number cores used. Default 1 (.e. parallel computing). Can set globally current R session via \"mc.cores\" option (e.g.  options(mc.cores = 2)). Note repositories might support parallel queries IP address might identified denial--service cyberattack. pb Logical argument control progress bar shown. Default TRUE. Can set globally current R session via \"pb\" option ( options(pb = TRUE)). verbose Logical argument determines text shown console. Default TRUE. Can set globally current R session via \"verbose\" option ( options(verbose = TRUE)). format Character vector media format query . Currently 'image' 'sound' available. identified Logical argument define search results categorized identified inaturalist. verifiable Logical argument define search results categorized verifiable inaturalist. all_data Logical argument determines data available database shown results search. Default TRUE. raw_data Logical argument determines raw data API returned (e.g. without manipulation). Default FALSE. Can set globally current R session via \"raw_data\" option ( options(raw_data = TRUE)). TRUE  all_data set TRUE internally. Useful developers, users suspect data mishandled processing (.e. date information lost). Note metadata obtained raw_data = TRUE standardized, suwo functions downstream steps work .","code":""},{"path":"https://marce10.github.io/suwo/reference/query_inaturalist.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Access 'inaturalist' recordings and metadata — query_inaturalist","text":"function returns data frame metadata media files matching search criteria. all_data = TRUE, metadata fields (columns) returned. raw_data = TRUE, raw data obtained repository returned (without formatting).","code":""},{"path":"https://marce10.github.io/suwo/reference/query_inaturalist.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Access 'inaturalist' recordings and metadata — query_inaturalist","text":"function queries species observation info open-access online repository inaturalist. iNaturalist free, crowdsourced online platform nature enthusiasts document identify plants, animals, fungi, organisms wild.","code":""},{"path":"https://marce10.github.io/suwo/reference/query_inaturalist.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Access 'inaturalist' recordings and metadata — query_inaturalist","text":"iNaturalist. Available https://www.inaturalist.org. Accessed [date]","code":""},{"path":"https://marce10.github.io/suwo/reference/query_inaturalist.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Access 'inaturalist' recordings and metadata — query_inaturalist","text":"Marcelo Araya-Salas (marcelo.araya@ucr.ac.cr)","code":""},{"path":"https://marce10.github.io/suwo/reference/query_inaturalist.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Access 'inaturalist' recordings and metadata — query_inaturalist","text":"","code":"if (FALSE) { # \\dontrun{ # search without downloading View(df1) } # }"},{"path":"https://marce10.github.io/suwo/reference/query_macaulay.html","id":null,"dir":"Reference","previous_headings":"","what":"Searches for media files in the Macaulay Library — query_macaulay","title":"Searches for media files in the Macaulay Library — query_macaulay","text":"query_macaulay searches metadata macaulay.","code":""},{"path":"https://marce10.github.io/suwo/reference/query_macaulay.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Searches for media files in the Macaulay Library — query_macaulay","text":"","code":"query_macaulay(   species = getOption(\"species\"),   format = c(\"sound\", \"image\", \"video\"),   verbose = getOption(\"verbose\", TRUE),   all_data = getOption(\"all_data\", FALSE),   raw_data = getOption(\"raw_data\", FALSE),   path = \".\",   files = NULL,   dates = NULL,   taxon_code_info = ml_taxon_code )"},{"path":"https://marce10.github.io/suwo/reference/query_macaulay.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Searches for media files in the Macaulay Library — query_macaulay","text":"species Character string scientific name species format: \"Genus epithet\". Required. Can set globally current R session via \"term\" option (e.g. options(term = \"Hypsiboas rufitelus\")). format Character vector media format query . Options 'sound', 'image' 'video'. Required. verbose Logical argument determines text shown console. Default TRUE. Can set globally current R session via \"verbose\" option ( options(verbose = TRUE)). all_data Logical argument determines data available database shown results search. Default FALSE. Can set globally current R session via \"all_data\" option ( options(all_data = TRUE)). raw_data Logical argument determines raw data API returned (e.g. without manipulation). Default FALSE. Can set globally current R session via \"raw_data\" option ( options(raw_data = TRUE)). TRUE  all_data set TRUE internally. Useful developers, users suspect data mishandled processing (.e. date information lost). Note metadata obtained raw_data = TRUE standardized, suwo functions downstream steps work . path Directory path .csv file saved. default saved current working directory (\".\"). files Optional character vector name(s) .csv file(s) read. provided, function open browser window search results page, user must download .csv file metadata. dates Optional numeric vector years split search. provided, function perform separate queries date range (consecutive date values) combine results. Useful queries return large number results (.e. > 10000 results limit). example, search species 2010 2020 2021 2025 use dates = c(2010, 2020, 2025). years contain decimals searches split months within years well. taxon_code_info Data frame containing taxon code information. default function use internal data frame \"ml_taxon_code\" included example data package. object contains data Clement list october 2024 (downloaded https://www.birds.cornell.edu/clementschecklist/introduction/updateindex/october-2024/2024-citation-checklist-downloads/). new versions list become available updated new package versions. However, users need update can download new list version, read R data frame provide function argument.","code":""},{"path":"https://marce10.github.io/suwo/reference/query_macaulay.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Searches for media files in the Macaulay Library — query_macaulay","text":"function returns data frame metadata media files matching search criteria. all_data = TRUE, metadata fields (columns) returned. raw_data = TRUE, raw data obtained repository returned (without formatting).","code":""},{"path":"https://marce10.github.io/suwo/reference/query_macaulay.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Searches for media files in the Macaulay Library — query_macaulay","text":"function queries species observation info Macaulay Library online repository returns metadata media files matching query. Macaulay Library world’s largest repository digital media (audio, photo, video) wildlife, habitats. archive hosts 77 million images, 3 million sound recordings, 350k videos, 80k contributors, integrated eBird, world’s largest biodiversity dataset. interactive function opens browser window Macaulay Library's search page, user must download .csv file metadata. function reads .csv file returns data frame metadata. instructions using function properly: Users must save save .csv file manually file saved overwritting pre-existing file (.e. file name) function detect maximum 10000 records per query can returned, can bypassed using dates argument split search smaller date ranges Users must log Macaulay Library/eBird account order access large batches observations","code":""},{"path":"https://marce10.github.io/suwo/reference/query_macaulay.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Searches for media files in the Macaulay Library — query_macaulay","text":"Scholes III, Ph.D. E (2015). Macaulay Library Audio Video Collection. Cornell Lab Ornithology. Occurrence dataset https://doi.org/10.15468/ckcdpy accessed via GBIF.org 2024-05-09. Clements, J. F., P. C. Rasmussen, T. S. Schulenberg, M. J. Iliff, T. . Fredericks, J. . Gerbracht, D. Lepage, . Spencer, S. M. Billerman, B. L. Sullivan, M. Smith, C. L. Wood. 2024. eBird/Clements checklist Birds World: v2024.","code":""},{"path":"https://marce10.github.io/suwo/reference/query_macaulay.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Searches for media files in the Macaulay Library — query_macaulay","text":"Marcelo Araya-Salas (marcelo.araya@ucr.ac.cr)","code":""},{"path":"https://marce10.github.io/suwo/reference/query_macaulay.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Searches for media files in the Macaulay Library — query_macaulay","text":"","code":"if (FALSE) { # \\dontrun{ # query sounds tur_ili <- query_macaulay(species = \"Turdus iliacus\", format = \"sound\", path = tempdir())  # test a query with more than 10000 results paging by date cal_cos <- query_macaulay(species = \"Calypte costae\", format = \"image\", path = tempdir(), dates = c(1976, 2019, 2022, 2024, 2025, 2026))  # this is how the internal function that splits the search by year intervals works # it can split by entire year intervals suwo:::.date_ranges(x = c(1976, 2020, 2022, 2024, 2025, 2026))  # or by year-month intervals if dates have decimals # (note that it cannot split across years) suwo:::.date_ranges(x = seq(2020, 2026, length.out = 10))  ## update clement list (note that this is actually the same list used in the # current 'suwo' version, just for the sake of the example)  # url to the clements list version october 2024 # (split so it is not truncaded by CRAN) clements_url <- paste0( \"https://www.birds.cornell.edu/clementschecklist/wp-content/uploads/2024/10\", \"/Clements-v2024-October-2024-rev.csv\" )  # read list from url new_clements <- read.csv(clements_url)  # provide \"updated\" clements list to query_macaulay() tur_ili2 <- query_macaulay(species = \"Turdus iliacus\", format = \"sound\",  taxon_code_info = new_clements, path = tempdir()) } # }"},{"path":"https://marce10.github.io/suwo/reference/query_observation.html","id":null,"dir":"Reference","previous_headings":"","what":"Access 'observation' recordings and metadata — query_observation","title":"Access 'observation' recordings and metadata — query_observation","text":"query_observation searches metadata observation.","code":""},{"path":"https://marce10.github.io/suwo/reference/query_observation.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Access 'observation' recordings and metadata — query_observation","text":"","code":"query_observation(   species = getOption(\"species\"),   format = c(\"sound\", \"image\"),   cores = getOption(\"mc.cores\", 1),   pb = getOption(\"pb\", TRUE),   verbose = getOption(\"verbose\", TRUE),   token = NULL,   all_data = getOption(\"all_data\", FALSE),   raw_data = getOption(\"raw_data\", FALSE) )"},{"path":"https://marce10.github.io/suwo/reference/query_observation.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Access 'observation' recordings and metadata — query_observation","text":"species Character string scientific name species format: \"Genus epithet\". Required. Can set globally current R session via \"term\" option (e.g. options(term = \"Hypsiboas rufitelus\")). format Character vector media format query . Currently 'image' 'sound' available. cores Numeric vector length 1. Controls whether parallel computing applied specifying number cores used. Default 1 (.e. parallel computing). Can set globally current R session via \"mc.cores\" option (e.g.  options(mc.cores = 2)). Note repositories might support parallel queries IP address might identified denial--service cyberattack. pb Logical argument control progress bar shown. Default TRUE. Can set globally current R session via \"pb\" option ( options(pb = TRUE)). verbose Logical argument determines text shown console. Default TRUE. Can set globally current R session via \"verbose\" option ( options(verbose = TRUE)). token Character refering token assigned Observation.org authorization searches. Required. all_data Logical argument determines data available database shown results search. Default FALSE. Can set globally current R session via \"all_data\" option ( options(all_data = TRUE)). raw_data Logical argument determines raw data API returned (e.g. without manipulation). Default FALSE. Can set globally current R session via \"raw_data\" option ( options(raw_data = TRUE)). TRUE  all_data set TRUE internally. Useful developers, users suspect data mishandled processing (.e. date information lost). Note metadata obtained raw_data = TRUE standardized, suwo functions downstream steps work .","code":""},{"path":"https://marce10.github.io/suwo/reference/query_observation.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Access 'observation' recordings and metadata — query_observation","text":"function returns data frame metadata media files matching search criteria. all_data = TRUE, metadata fields (columns) returned. raw_data = TRUE, raw data obtained repository returned (without formatting).","code":""},{"path":"https://marce10.github.io/suwo/reference/query_observation.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Access 'observation' recordings and metadata — query_observation","text":"function queries species observation info open-access online repository observation. can return media metadata.","code":""},{"path":"https://marce10.github.io/suwo/reference/query_observation.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Access 'observation' recordings and metadata — query_observation","text":"Observation.org, Observation International local partners. Available https://observation.org. Retrieved June 30, 2022","code":""},{"path":"https://marce10.github.io/suwo/reference/query_observation.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Access 'observation' recordings and metadata — query_observation","text":"Marcelo Araya-Salas (marcelo.araya@ucr.ac.cr)","code":""},{"path":"https://marce10.github.io/suwo/reference/query_observation.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Access 'observation' recordings and metadata — query_observation","text":"","code":"if (FALSE) { # \\dontrun{ # search without downloading View(df1) } # }"},{"path":"https://marce10.github.io/suwo/reference/query_wikiaves.html","id":null,"dir":"Reference","previous_headings":"","what":"Access 'Wikiaves' recordings and metadata — query_wikiaves","title":"Access 'Wikiaves' recordings and metadata — query_wikiaves","text":"query_wikiaves searches metadata wikiaves.","code":""},{"path":"https://marce10.github.io/suwo/reference/query_wikiaves.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Access 'Wikiaves' recordings and metadata — query_wikiaves","text":"","code":"query_wikiaves(   species = getOption(\"species\"),   format = c(\"sound\", \"image\"),   cores = getOption(\"mc.cores\", 1),   pb = getOption(\"pb\", TRUE),   verbose = getOption(\"verbose\", TRUE),   all_data = getOption(\"all_data\", FALSE),   raw_data = getOption(\"raw_data\", FALSE) )"},{"path":"https://marce10.github.io/suwo/reference/query_wikiaves.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Access 'Wikiaves' recordings and metadata — query_wikiaves","text":"species Character string scientific name species format: \"Genus epithet\". Required. Can set globally current R session via \"term\" option (e.g. options(term = \"Hypsiboas rufitelus\")). format Character vector media format query . Options 'sound' 'image'. Required. cores Numeric vector length 1. Controls whether parallel computing applied specifying number cores used. Default 1 (.e. parallel computing). Can set globally current R session via \"mc.cores\" option (e.g.  options(mc.cores = 2)). Note repositories might support parallel queries IP address might identified denial--service cyberattack. pb Logical argument control progress bar shown. Default TRUE. Can set globally current R session via \"pb\" option ( options(pb = TRUE)). verbose Logical argument determines text shown console. Default TRUE. Can set globally current R session via \"verbose\" option ( options(verbose = TRUE)). all_data Logical argument determines data available database shown results search. Default FALSE. Can set globally current R session via \"all_data\" option ( options(all_data = TRUE)). raw_data Logical argument determines raw data API returned (e.g. without manipulation). Default FALSE. Can set globally current R session via \"raw_data\" option ( options(raw_data = TRUE)). TRUE  all_data set TRUE internally. Useful developers, users suspect data mishandled processing (.e. date information lost). Note metadata obtained raw_data = TRUE standardized, suwo functions downstream steps work .","code":""},{"path":"https://marce10.github.io/suwo/reference/query_wikiaves.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Access 'Wikiaves' recordings and metadata — query_wikiaves","text":"function returns data frame metadata media files matching search criteria. all_data = TRUE, metadata fields (columns) returned. raw_data = TRUE, raw data obtained repository returned (without formatting).","code":""},{"path":"https://marce10.github.io/suwo/reference/query_wikiaves.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Access 'Wikiaves' recordings and metadata — query_wikiaves","text":"function queries avian digital media open-access online repository wikiaves returns metadata. WikiAves Brazilian online platform citizen science project serves largest community birdwatchers Brazil. functions collaborative, interactive encyclopedia Brazilian birds, users contribute georeferenced photographs sound recordings, used build vast database research conservation.","code":""},{"path":"https://marce10.github.io/suwo/reference/query_wikiaves.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Access 'Wikiaves' recordings and metadata — query_wikiaves","text":"Schubert, Stephanie Caroline, Lilian Tonelli Manica, André De Camargo Guaraldo. 2019. Revealing potential huge citizen-science platform study bird migration. Emu-Austral Ornithology 119.4: 364-373.","code":""},{"path":"https://marce10.github.io/suwo/reference/query_wikiaves.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Access 'Wikiaves' recordings and metadata — query_wikiaves","text":"Marcelo Araya-Salas (marcelo.araya@ucr.ac.cr)","code":""},{"path":"https://marce10.github.io/suwo/reference/query_wikiaves.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Access 'Wikiaves' recordings and metadata — query_wikiaves","text":"","code":"if (FALSE) { # \\dontrun{ # search df1 <- query_wikiaves(species = \"Phaethornis nattereri\", format = \"image\") View(df1) } # }"},{"path":"https://marce10.github.io/suwo/reference/query_xenocanto.html","id":null,"dir":"Reference","previous_headings":"","what":"Access 'Xeno-Canto' recordings and metadata — query_xenocanto","title":"Access 'Xeno-Canto' recordings and metadata — query_xenocanto","text":"query_xenocanto searches metadata Xeno-Canto.","code":""},{"path":"https://marce10.github.io/suwo/reference/query_xenocanto.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Access 'Xeno-Canto' recordings and metadata — query_xenocanto","text":"","code":"query_xenocanto(   species = getOption(\"species\"),   api_key = getOption(\"xc_api_key\"),   cores = getOption(\"mc.cores\", 1),   pb = getOption(\"pb\", TRUE),   verbose = getOption(\"verbose\", TRUE),   all_data = getOption(\"all_data\", FALSE),   raw_data = getOption(\"raw_data\", FALSE) )"},{"path":"https://marce10.github.io/suwo/reference/query_xenocanto.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Access 'Xeno-Canto' recordings and metadata — query_xenocanto","text":"species Character string scientific name species format: \"Genus epithet\". Required. Can set globally current R session via \"term\" option (e.g. options(term = \"Hypsiboas rufitelus\")). Alternatively, character string containing additional tags follows Xeno-Canto advanced query syntax can provided. Tags form 'tag:searchterm'. instance, 'type:\"song\"' search recordings sound type contains 'song'. Multiple tags can provided (e.g., '\"cnt:\"belize\" type:\"song\"'). See examples check Xeno-Canto's search help full description. api_key Character string refering key assigned Xeno-Canto authorization searches. Get https://xeno-canto.org/account. Required. cores Numeric vector length 1. Controls whether parallel computing applied specifying number cores used. Default 1 (.e. parallel computing). Can set globally current R session via \"mc.cores\" option (e.g.  options(mc.cores = 2)). Note repositories might support parallel queries IP address might identified denial--service cyberattack. pb Logical argument control progress bar shown. Default TRUE. Can set globally current R session via \"pb\" option ( options(pb = TRUE)). verbose Logical argument determines text shown console. Default TRUE. Can set globally current R session via \"verbose\" option ( options(verbose = TRUE)). all_data Logical argument determines data available database shown results search. Default FALSE. Can set globally current R session via \"all_data\" option ( options(all_data = TRUE)). raw_data Logical argument determines raw data API returned (e.g. without manipulation). Default FALSE. Can set globally current R session via \"raw_data\" option ( options(raw_data = TRUE)). TRUE  all_data set TRUE internally. Useful developers, users suspect data mishandled processing (.e. date information lost). Note metadata obtained raw_data = TRUE standardized, suwo functions downstream steps work .","code":""},{"path":"https://marce10.github.io/suwo/reference/query_xenocanto.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Access 'Xeno-Canto' recordings and metadata — query_xenocanto","text":"function returns data frame metadata media files matching search criteria. all_data = TRUE, metadata fields (columns) returned. raw_data = TRUE, raw data obtained repository returned (without formatting).","code":""},{"path":"https://marce10.github.io/suwo/reference/query_xenocanto.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Access 'Xeno-Canto' recordings and metadata — query_xenocanto","text":"function queries metadata animal sound recordings open-access  online repository Xeno-Canto. Complex queries can constructed usin Xeno-Canto advanced query syntax.","code":""},{"path":"https://marce10.github.io/suwo/reference/query_xenocanto.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Access 'Xeno-Canto' recordings and metadata — query_xenocanto","text":"Planqué, Bob, & Willem-Pier Vellinga. 2008. Xeno-canto: 21st-century way appreciate Neotropical bird song. Neotrop. Birding 3: 17-23.","code":""},{"path":[]},{"path":"https://marce10.github.io/suwo/reference/query_xenocanto.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Access 'Xeno-Canto' recordings and metadata — query_xenocanto","text":"Marcelo Araya-Salas (marcelo.araya@ucr.ac.cr)","code":""},{"path":"https://marce10.github.io/suwo/reference/query_xenocanto.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Access 'Xeno-Canto' recordings and metadata — query_xenocanto","text":"","code":"if (FALSE) { # \\dontrun{ # An API key is required. Get yours at https://xeno-canto.org/account. XC_API_KEY <- \"YOUR_API_KEY_HERE\"  # Simple search for a species (will be converted to sp:\"Phaethornis anthophilus\") p_anth <- query_xenocanto(species = \"Phaethornis anthophilus\", api_key = XC_API_KEY)  # Search for same species and add specify country p_anth_cr <- query_xenocanto(species = 'sp:\"Phaethornis anthophilus\" cnt:\"Panama\"', raw_data = TRUE, api_key = XC_API_KEY)  # Search for female songs of a species femsong <-  query_xenocanto( species = 'sp:\"Thryothorus ludovicianus\" type:\"song\" type:\"female\"', api_key = XC_API_KEY) } # }"},{"path":"https://marce10.github.io/suwo/reference/remove_duplicates.html","id":null,"dir":"Reference","previous_headings":"","what":"Merge metadata data frames — remove_duplicates","title":"Merge metadata data frames — remove_duplicates","text":"remove_duplicates merges metadata data frames suwo queries.","code":""},{"path":"https://marce10.github.io/suwo/reference/remove_duplicates.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Merge metadata data frames — remove_duplicates","text":"","code":"remove_duplicates(   metadata,   same_repo = FALSE,   cores = getOption(\"mc.cores\", 1),   pb = getOption(\"pb\", TRUE),   repo_priority = c(\"Xeno-Canto\", \"GBIF\", \"iNaturalist\", \"Macaulay Library\", \"Wikiaves\",     \"Observation\") )"},{"path":"https://marce10.github.io/suwo/reference/remove_duplicates.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Merge metadata data frames — remove_duplicates","text":"metadata data frame obtained possible duplicates  function find_duplicates. data frame must column 'duplicate_group' returned find_duplicates. same_repo Logical argument indicating observations labeled duplicates belong repository removed. Default FALSE. TRUE, one duplicated observations repository retained output data frame. useful can expected observations repository true duplicates (e.g. different recordings uploaded Xeno-Canto date, time location user), rather documented enough precision told apart. cores Numeric vector length 1. Controls whether parallel computing applied specifying number cores used. Default 1 (.e. parallel computing). Can set globally current R session via \"mc.cores\" option (e.g.  options(mc.cores = 2)). Note repositories might support parallel queries IP address might identified denial--service cyberattack. pb Logical argument control progress bar shown. Default TRUE. Can set globally current R session via \"pb\" option ( options(pb = TRUE)). repo_priority Character vector indicating priority repositories selecting observation retain duplicates found. Default c(\"Xeno-Canto\", \"GBIF\", \"iNaturalist\", \"Macaulay Library\", \"Wikiaves\", \"Observation\"), gives priority repositories media downloading straightforward (Xeno-Canto GBIF).","code":""},{"path":"https://marce10.github.io/suwo/reference/remove_duplicates.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Merge metadata data frames — remove_duplicates","text":"single data frame subset 'metadata' observations determined duplicates.","code":""},{"path":"https://marce10.github.io/suwo/reference/remove_duplicates.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Merge metadata data frames — remove_duplicates","text":"function removes duplicate observations identified function find_duplicates. duplicates found, one observation group duplicates retained output data frame. However, multiple observations repository labeled duplicates, default (same_repo = FALSE) retained output data frame. useful can expected observations repository true duplicates (e.g. different recordings uploaded Xeno-Canto date, time location user), rather documented enough precision told apart. behavior can modified. same_repo = TRUE, one duplicated observations repository retained output data frame. function give priority repositories media downloading straightforward (Xeno-Canto GBIF), can modified argument 'repo_priority'.","code":""},{"path":[]},{"path":"https://marce10.github.io/suwo/reference/remove_duplicates.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Merge metadata data frames — remove_duplicates","text":"Marcelo Araya-Salas (marcelo.araya@ucr.ac.cr)","code":""},{"path":"https://marce10.github.io/suwo/reference/remove_duplicates.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Merge metadata data frames — remove_duplicates","text":"","code":"if (FALSE) { # \\dontrun{ # get metadata from 2 repos gb <- query_gbif(species = \"Turdus rufiventris\", format =  \"sound\") xc <- query_xenocanto(species = \"Turdus rufiventris\")  # combine metadata merged_metadata <- merge_metadata(xc, gb)  # find duplicates label_dup_metadata <- find_duplicates(metadata = merged_metadata)  # remove duplicates dedup_metadata <- remove_duplicates(label_dup_metadata) } # }"},{"path":"https://marce10.github.io/suwo/reference/suwo-package.html","id":null,"dir":"Reference","previous_headings":"","what":"suwo: A package to streamline bioacoustic analysis — suwo-package","title":"suwo: A package to streamline bioacoustic analysis — suwo-package","text":"suwo intended facilitate search biological observation data across multiple databases","code":""},{"path":"https://marce10.github.io/suwo/reference/suwo-package.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"suwo: A package to streamline bioacoustic analysis — suwo-package","text":"main features package : use loops apply tasks acoustic signals referenced selection table production images working folder spectrograms allow organize data verify acoustic analyzes package offers functions : Explore download observational data iNaturalist, GBIF, Macaulay Library, Observation.org, Wikiaves Xenocanto. Download different types data across multiple databases Consolidate databases annotation tables functions allow parallelization tasks, distributes tasks among several processors improve computational efficiency. Tools evaluate performance analysis step also available. addition, warbleR satisfies need rigorous open source bioacoustic analysis, facilitates opportunities use research innovation additional custom analyzes. License: GPL (>= 2)","code":""},{"path":[]},{"path":"https://marce10.github.io/suwo/reference/suwo-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"suwo: A package to streamline bioacoustic analysis — suwo-package","text":"Marcelo Araya-Salas & Jorge Elizondo-Calvo Maintainer: Marcelo Araya-Salas (marcelo.araya@ucr.ac.cr)","code":""},{"path":"https://marce10.github.io/suwo/reference/update_metadata.html","id":null,"dir":"Reference","previous_headings":"","what":"Update metadata — update_metadata","title":"Update metadata — update_metadata","text":"update_metadata update metadata previous queries.","code":""},{"path":"https://marce10.github.io/suwo/reference/update_metadata.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Update metadata — update_metadata","text":"","code":"update_metadata(   metadata,   token = NULL,   path = \".\",   cores = getOption(\"mc.cores\", 1),   pb = getOption(\"pb\", TRUE),   verbose = getOption(\"verbose\", TRUE),   api_key = NULL,   dates = NULL )"},{"path":"https://marce10.github.io/suwo/reference/update_metadata.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Update metadata — update_metadata","text":"metadata data frame previously obtained suwo query function (.e. `query_reponame()`). token valid token Observation.org API. needed input metadata comes query_observation. path Directory path .csv file saved. applicable query_macaulay query results. default saved current working directory (\".\"). cores Numeric vector length 1. Controls whether parallel computing applied specifying number cores used. Default 1 (.e. parallel computing). Can set globally current R session via \"mc.cores\" option (e.g.  options(mc.cores = 2)). Note repositories might support parallel queries IP address might identified denial--service cyberattack. pb Logical argument control progress bar shown. Default TRUE. Can set globally current R session via \"pb\" option ( options(pb = TRUE)). verbose Logical argument determines text shown console. Default TRUE. Can set globally current R session via \"verbose\" option ( options(verbose = TRUE)). api_key Character string referring key assigned Xeno-Canto authorization searches. Get https://xeno-canto.org/account. needed input metadata comes query_xenocanto. dates Optional numeric vector years split search. provided, function perform separate queries date range (consecutive date values) combine results. Useful queries return large number results (.e. > 10000 results limit). example, search species 2010 2020 2021 2025 use dates = c(2010, 2020, 2025). years contain decimals searches split months within years well. needed input metadata comes query_macaulay.","code":""},{"path":"https://marce10.github.io/suwo/reference/update_metadata.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Update metadata — update_metadata","text":"returns data frame similar input 'metadata' new data appended.","code":""},{"path":"https://marce10.github.io/suwo/reference/update_metadata.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Update metadata — update_metadata","text":"function updates metadata previous query add entries found source repository. observations must belong repository. function adds column `new_entry` labels entries new (.e., present input metadata). input data frame must obtained query functions argument `raw_data = FALSE`. function uses query species format original query. new entries found, function returns original metadata prints message. old entries returned new query still retained.","code":""},{"path":"https://marce10.github.io/suwo/reference/update_metadata.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Update metadata — update_metadata","text":"Marcelo Araya-Salas (marcelo.araya@ucr.ac.cr)","code":""},{"path":"https://marce10.github.io/suwo/reference/update_metadata.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Update metadata — update_metadata","text":"","code":"if (FALSE) { # \\dontrun{ # query metadata wa <- query_wikiaves(species = 'Glaucis dohrnii', format =  \"sound\")  # remove last 3 rows to test update_metadata sub_wa <- wa[1:(nrow(wa)- 3), ]  # update up_wa <- update_metadata(metadata = sub_wa)  # check number of rows is the same nrow(up_wa) == nrow(wa) } # }"},{"path":"https://marce10.github.io/suwo/news/index.html","id":"suwo-010","dir":"Changelog","previous_headings":"","what":"suwo 0.1.0","title":"suwo 0.1.0","text":"First release","code":""}]
