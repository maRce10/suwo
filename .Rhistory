# set clusters for windows OS
if (Sys.info()[1] == "Windows" & cores > 1)
cl <- parallel::makePSOCKcluster(getOption("cl.cores", cores)) else cl <- cores
a1 <- pblapply_sw_int(pbar = pb, X = 1:nrow(Y), cl = cl, FUN = function(x)
{
try(xcFUN(Y, x), silent = TRUE)
})
}
}
download_media(metadata = df1, path = tempdir())
cores = 2
download_media(metadata = df1, path = tempdir())
cores = 1
download_media(metadata = df1, path = tempdir())
download_media(metadata = df1, path = tempdir())
df1 <- query_wikiaves(term = 'Glaucis dohrnii', type =  "audio", verbose = FALSE, pb = FALSE)
download_media(metadata = df1, path = tempdir())
tempdir()
download_media(metadata = df1, path = "/home/neuro/Downloads/delete")
df1 <- query_xenocanto(term = 'Phaethornis anthophilus')
df1
df1$repository <- "XC"
df1
source("~/Dropbox/R_package_testing/suwo/R/query_xenocanto.R")
df1 <- query_xenocanto(term = 'Phaethornis anthophilus')
df1
download_media(metadata = df1, path = "/home/neuro/Downloads/delete")
download_media(metadata = df1, path = "/home/neuro/Downloads/delete")
query_wikiaves("cyanoleuca", type = "audio", cores = 2)
df2 <- query_wikiaves("Glaucis dohrnii", type = "audio", cores = 2)
download_media(df2,path = "~/Downloads/delete/")
query_xenocanto("Phaethornis anthophilus", cores = 2)
df1 <- query_xenocanto("Phaethornis anthophilus", cores = 2)
df1
download_media(df1,path = "~/Downloads/delete/")
download_media(df2,path = "~/Downloads/delete/", cores = 1)
df1 <- query_xenocanto("Phaethornis anthophilus", cores = 1)
download_media(df1,path = "~/Downloads/delete/")
knit_with_parameters("~/Dropbox/R_package_testing/suwo/README.Rmd")
read.table("~/Downloads/")
term = "Sound"
#format JSON
term <- gsub(" ", "%20", term)
base.srch.pth <- paste0("https://api.gbif.org/v1/occurrence/search?&", "media_type=", term)
#initialize search
q <- rjson::fromJSON(file = paste0(base.srch.pth, term))
count <- q$results$count
count
source("~/Dropbox/R_package_testing/suwo/R/query_gbif.R")
source("~/Dropbox/R_package_testing/suwo/R/internal_functions.R")
test_that("search Aristolochia baetica images", {
df1 <- query_gbif(term = 'Aristolochia baetica', type =  "still image")
expect_true(nrow(df1) >= 1456)
})
library(testthat)
test_that("search Aristolochia baetica images", {
df1 <- query_gbif(term = 'Aristolochia baetica', type =  "still image")
expect_true(nrow(df1) >= 1456)
})
test_that("search Spatula discors audio (no audios)", {
df1 <- query_gbif(term = 'Floractus heimi', type =  "sound")
# system(paste("firefox", df1$link[1]))
expect_true(is.null(df1))
})
test_that("search Glaucis dohrnii photos", {
df1 <- query_gbif(term = 'Glaucis dohrnii', type =  "still image")
# system(paste("firefox", df1$link[1]))
expect_true(nrow(df1) >=  257)
})
test_that("search Glaucis dohrnii photos", {
df1 <- query_gbif(term = 'Glaucis dohrnii', type =  "still image")
# system(paste("firefox", df1$link[1]))
expect_true(nrow(df1) >=  257)
})
test_that("search Glaucis dohrnii photos", {
df1 <- query_gbif(term = 'Glaucis dohrnii', type =  "still image")
# system(paste("firefox", df1$link[1]))
expect_true(nrow(df1) >=  29)
})
test_that("no result", {
df1 <- query_gbif(term = 'asdasdasd', type =  "sound")
# system(paste("firefox", df1$link[1]))
expect_true(is.null(df1))
})
test_that("search Glaucis photos (2 species)", {
df1 <- query_gbif(term = 'Glaucis', type =  "still image")
# system(paste("firefox", df1$link[1]))
expect_true(nrow(df1) >=  714)
})
test_that("search Aristolochia baetica photos in parallel", {
df1 <- query_gbif(term = 'Aristolochia baetica', type =  "still image", cores = 3)
# system(paste("firefox", df1$link[1]))
expect_true(nrow(df1) >= 2003)
})
test_that("test verbose FALSE", {
df1 <- capture_output(query_gbif(term = 'a3', type =  "sound", verbose = FALSE, pb = FALSE))
# system(paste("firefox", df1$link[1]))
expect_true(df1 == "")
})
df1 <- query_gbif(term = 'Glaucis dohrnii', type =  "still image")
df1
View(df1)
term = "Hirundo rustica"
#format JSON
term <- gsub(" ", "%20", term)
base.srch.pth <- paste0("https://api.inaturalist.org/v1/Search?", "q=", term)
#initialize search
q <- rjson::fromJSON(file = paste0(base.srch.pth, term))
count <- q$count
count
q
base.srch.pth
count <- q$total_results
count
base.srch.pth <- paste0("https://api.inaturalist.org/v1/Search?", "q=", term)
#initialize search
q <- rjson::fromJSON(file = paste0(base.srch.pth, term))
count <- q$total_results
count
q
#initialize search
q <- rjson::fromJSON(file = paste0(base.srch.pth))
count <- q$total_results
count
test_that("search Glaucis dohrnii audio", {
df1 <- query_gbif(term = 'Glaucis dohrnii', type =  "sound")
# system(paste("firefox", df1$link[1]))
expect_true(nrow(df1) == 22)
})
test_that("search Aristolochia baetica images", {
df1 <- query_gbif(term = 'Aristolochia baetica', type =  "still image")
expect_true(nrow(df1) >= 1456)
})
test_that("search Floractus heimi audio (no audios)", {
df1 <- query_gbif(term = 'Floractus heimi', type =  "sound")
# system(paste("firefox", df1$link[1]))
expect_true(is.null(df1))
})
test_that("search Glaucis dohrnii photos", {
df1 <- query_gbif(term = 'Glaucis dohrnii', type =  "still image")
# system(paste("firefox", df1$link[1]))
expect_true(nrow(df1) >=  29)
})
source("~/Dropbox/R_package_testing/suwo/R/query_gbif.R")
test_that("no result", {
df1 <- query_gbif(term = 'asdasdasd', type =  "sound")
# system(paste("firefox", df1$link[1]))
expect_true(is.null(df1))
})
test_that("no result", {
df1 <- query_gbif(term = 'asdasdasd', type =  "still image")
# system(paste("firefox", df1$link[1]))
expect_true(is.null(df1))
})
source("~/Dropbox/R_package_testing/suwo/R/query_gbif.R")
test_that("no result", {
df1 <- query_gbif(term = 'asdasdasd', type =  "still image")
# system(paste("firefox", df1$link[1]))
expect_true(is.null(df1))
})
test_that("search Glaucis photos (2 species)", {
df1 <- query_gbif(term = 'Glaucis', type =  "still image")
# system(paste("firefox", df1$link[1]))
expect_true(nrow(df1) >=  714)
})
df1
df1 <- query_gbif(term = 'Glaucis', type =  "still image")
df1
table(df1$species)
test_that("search Aristolochia baetica photos in parallel", {
df1 <- query_gbif(term = 'Aristolochia baetica', type =  "still image", cores = 3)
# system(paste("firefox", df1$link[1]))
expect_true(nrow(df1) >= 2003)
})
df1 <- query_gbif(term = 'Aristolochia baetica', type =  "still image", cores = 3)
df1$
system(paste("firefox", df1$`media-URL`[1]))
df1$
system(paste0("firefox", df1$`media-URL`[1]))
system(paste("firefox", df1$`media-URL`[1]))
test_that("test verbose FALSE", {
df1 <- capture_output(query_gbif(term = 'a3', type =  "sound", verbose = FALSE, pb = FALSE))
# system(paste("firefox", df1$link[1]))
expect_true(df1 == "")
})
count <- q$total_results
count
q
view(q)
View(q)
source("~/Dropbox/R_package_testing/suwo/R/query_xenocanto.R")
query_gbif(Hirundo)
query_gbif("hirudndo")
query_gbif("hirundo")
source("~/Dropbox/R_package_testing/suwo/R/query_gbif.R")
query_gbif("hirundo")
df1 <- query_gbif("glaucis dorhnii")
df1 <- query_gbif("glaucis dorhnii","still image")
df1 <- query_gbif("Glaucis dorhnii","still image")
df1 <- query_gbif(term = "Glaucis dorhnii",type= "still image")
test_that("search Glaucis dohrnii photos", {
df1 <- query_gbif(term = 'Glaucis dohrnii', type =  "still image")
# system(paste("firefox", df1$link[1]))
expect_true(nrow(df1) >=  29)
})
df1 <- query_gbif(term = 'Glaucis dohrnii', type =  "still image")
download_media(df1, path = "./Downloads")
source("~/Dropbox/R_package_testing/suwo/R/download_media.R")
source("~/Dropbox/R_package_testing/suwo/R/download_media.R")
download_media(df1, path = "./Downloads")
df1
source("~/Dropbox/R_package_testing/suwo/R/download_media.R")
source("~/Dropbox/R_package_testing/suwo/R/download_media.R")
download_media(df1, path = "./Downloads")
source("~/Dropbox/R_package_testing/suwo/R/query_gbif.R")
df1 <- query_gbif(term = 'Glaucis dohrnii', type =  "still image")
source("~/Dropbox/R_package_testing/suwo/R/query_gbif.R")
df1 <- query_gbif(term = 'Glaucis dohrnii', type =  "still image")
download_media(df1, path = "./Downloads")
getwd()
tempdir()
download_media(df1, path = tempdir())
list.files(path = tempdir())
xc <- query_xenocanto(term = 'Phaethornis anthophilus')[1:2, ]
df1 <- query_xenocanto(term = 'Phaethornis anthophilus')[1:2, ]
test_that("search XC Phaethornis anthophilus sp names", {
df1 <- query_xenocanto(term = 'Phaethornis anthophilus')[1:2, ]
download_media(metadata = df1, path = tempdir(), file.name = c("genus", "specific.epithet"))
fls <- list.files(path = tempdir(), pattern = "mp3$")
# remove files
unlink(file.path(tempdir(), fls))
expect_equal(fls, c("Phaethornis-anthophilus-XC532163.mp3",
"Phaethornis-anthophilus-XC568491.mp3"))
})
source("~/Dropbox/R_package_testing/suwo/R/query_xenocanto.R")
test_that("search XC Phaethornis anthophilus sp names", {
df1 <- query_xenocanto(term = 'Phaethornis anthophilus')[1:2, ]
download_media(metadata = df1, path = tempdir(), file.name = c("genus", "specific.epithet"))
fls <- list.files(path = tempdir(), pattern = "mp3$")
# remove files
unlink(file.path(tempdir(), fls))
expect_equal(fls, c("Phaethornis-anthophilus-XC532163.mp3",
"Phaethornis-anthophilus-XC568491.mp3"))
})
df1 <- query_xenocanto(term = 'Phaethornis anthophilus')[1:2, ]
df1
source("~/Dropbox/R_package_testing/suwo/R/query_xenocanto.R")
df1 <- query_xenocanto(term = 'Phaethornis anthophilus')[1:2, ]
df1
test_that("search XC Phaethornis anthophilus sp names", {
df1 <- query_xenocanto(term = 'Phaethornis anthophilus')[1:2, ]
download_media(metadata = df1, path = tempdir(), file.name = c("genus", "specific.epithet"))
fls <- list.files(path = tempdir(), pattern = "mp3$")
# remove files
unlink(file.path(tempdir(), fls))
expect_equal(fls, c("Phaethornis-anthophilus-XC532163.mp3",
"Phaethornis-anthophilus-XC568491.mp3"))
})
test_that("search WA Phaethornis anthophilus default file names", {
df1 <- query_wikiaves(term = 'Phaethornis pretei', type = "audio")
# [1:2, ]
download_media(metadata = df1, path = tempdir())
fls <- list.files(path = tempdir(), pattern = "mp3$")
# remove files
unlink(file.path(tempdir(), fls))
expect_equal(fls, c("XC532163.mp3", "XC568491.mp3"))
})
df1 <- query_wikiaves(term = 'Phaethornis pretei', type = "audio")
df1 <- query_wikiaves(term = 'Glaucis dohrnii', type =  "audio", verbose = FALSE, pb = FALSE)
df1
source("~/Dropbox/R_package_testing/suwo/R/query_wikiaves.R")
df1 <- query_wikiaves(term = 'Glaucis dohrnii', type =  "audio")
df1
source("~/Dropbox/R_package_testing/suwo/R/query_wikiaves.R")
df1 <- query_wikiaves(term = 'Glaucis dohrnii', type =  "audio")
df1
test_that("search WA Phaethornis anthophilus default file names", {
df1 <- query_wikiaves(term = 'Phaethornis pretei', type = "audio")
# [1:2, ]
download_media(metadata = df1, path = tempdir())
fls <- list.files(path = tempdir(), pattern = "mp3$")
# remove files
unlink(file.path(tempdir(), fls))
expect_equal(fls, c("XC532163.mp3", "XC568491.mp3"))
})
test_that("search XC Phaethornis anthophilus sp names", {
df1 <- query_xenocanto(term = 'Glaucis dohrnii')[1:2, ]
download_media(metadata = df1, path = tempdir(), file.name = c("genus", "specific.epithet"))
fls <- list.files(path = tempdir(), pattern = "mp3$")
# remove files
unlink(file.path(tempdir(), fls))
expect_equal(fls, c("Phaethornis-anthophilus-XC532163.mp3",
"Phaethornis-anthophilus-XC568491.mp3"))
})
test_that("search wikiaves Glaucis dohrnii sp names", {
df1 <- query_wikiaves(term = 'Glaucis dohrnii')[1:2, ]
download_media(metadata = df1, path = tempdir(), file.name = c("genus", "specific.epithet"))
fls <- list.files(path = tempdir(), pattern = "mp3$")
# remove files
unlink(file.path(tempdir(), fls))
expect_equal(fls, c("Glaucis-dohrnii-XC427418.mp3",
"Glaucis-dohrnii-XC618872.mp3"))
})
test_that("search wikiaves Glaucis dohrnii sp names", {
df1 <- query_wikiaves(term = 'Glaucis dohrnii', type = "s")[1:2, ]
download_media(metadata = df1, path = tempdir(), file.name = c("genus", "specific.epithet"))
fls <- list.files(path = tempdir(), pattern = "mp3$")
# remove files
unlink(file.path(tempdir(), fls))
expect_equal(fls, c("Glaucis-dohrnii-XC427418.mp3",
"Glaucis-dohrnii-XC618872.mp3"))
})
test_that("search wikiaves Glaucis dohrnii sp names", {
df1 <- query_wikiaves(term = 'Glaucis dohrnii', type = "s")[1:2, ]
download_media(metadata = df1, path = tempdir())
fls <- list.files(path = tempdir(), pattern = "mp3$")
# remove files
unlink(file.path(tempdir(), fls))
expect_equal(fls, c("Glaucis-dohrnii-XC427418.mp3",
"Glaucis-dohrnii-XC618872.mp3"))
})
source("~/Dropbox/R_package_testing/suwo/R/query_wikiaves.R")
source("~/Dropbox/R_package_testing/suwo/R/download_media.R")
test_that("search wikiaves Glaucis dohrnii sp names", {
df1 <- query_wikiaves(term = 'Glaucis dohrnii', type = "s")[1:2, ]
download_media(metadata = df1, path = tempdir())
fls <- list.files(path = tempdir(), pattern = "mp3$")
# remove files
unlink(file.path(tempdir(), fls))
expect_equal(fls, c("Glaucis-dohrnii-XC427418.mp3",
"Glaucis-dohrnii-XC618872.mp3"))
})
df1 <- query_wikiaves(term = 'Glaucis dohrnii', type = "s")[1:2, ]
df1
df1 <- query_wikiaves(term = 'Glaucis dohrnii', type = "s")
df1
df1 <- query_wikiaves(term = 'Glaucis dohrnii', type = "audio")
df1
test_that("search wikiaves Glaucis dohrnii sp names", {
df1 <- query_wikiaves(term = 'Glaucis dohrnii', type = "audio")[1:2, ]
download_media(metadata = df1, path = tempdir())
fls <- list.files(path = tempdir(), pattern = "mp3$")
# remove files
unlink(file.path(tempdir(), fls))
expect_equal(fls, c("Glaucis-dohrnii-XC427418.mp3",
"Glaucis-dohrnii-XC618872.mp3"))
})
df1 <- query_wikiaves(term = 'Glaucis dohrnii', type = "audio")[1:2, ]
download_media(metadata = df1, path = tempdir())
query_gbif("homo sapien", type = "still image")
query_gbif("Homo sapien", type = "still image")
df1 <- query_gbif(term = 'Homo sapien', type =  "still image")
test_that("search wikiaves Glaucis dohrnii sp names", {
df1 <- query_wikiaves(term = 'Glaucis dohrnii', type = "audio")[1:2, ]
download_media(metadata = df1, path = tempdir())
fls <- list.files(path = tempdir(), pattern = "mp3$")
# remove files
unlink(file.path(tempdir(), fls))
expect_equal(fls, c("Glaucis-dohrnii-XC427418.mp3",
"Glaucis-dohrnii-XC618872.mp3"))
})
df1 <- query_wikiaves(term = 'Glaucis dohrnii', type = "audio")[1:2, ]
download_media(metadata = df1, path = tempdir())
df1 <- query_wikiaves(term = 'Glaucis dohrnii', type = "audio")[1:2, ]
is.data.frame(df1)
df1
if (metadata$repository[x] == "XC"){
download.file(
url = paste("https://xeno-canto.org/", metadata$file_url[x], "/download", sep = ""),
destfile = file.path(path, metadata$media.files[x]),
quiet = TRUE,  mode = "wb", cacheOK = TRUE,
extra = getOption("download.file.extra"))
return (NULL)
} else if (metadata$repository[x] == "wikiaves"){
download.file(
url = as.character(metadata$file_url[x]),
destfile = file.path(path, metadata$media.files[x]),
quiet = TRUE,  mode = "wb", cacheOK = TRUE,
extra = getOption("download.file.extra"))
return (NULL)
} else if (metadata$repository[x] == "GBIF"){
download.file(
url = as.character(metadata$file_url[x]),
destfile = file.path(path, metadata$media.files[x]),
quiet = TRUE,  mode = "wb", cacheOK = TRUE,
extra = getOption("download.file.extra"))
return (NULL)
}
metadata <- df1
if (metadata$repository[x] == "XC"){
download.file(
url = paste("https://xeno-canto.org/", metadata$file_url[x], "/download", sep = ""),
destfile = file.path(path, metadata$media.files[x]),
quiet = TRUE,  mode = "wb", cacheOK = TRUE,
extra = getOption("download.file.extra"))
return (NULL)
} else if (metadata$repository[x] == "wikiaves"){
download.file(
url = as.character(metadata$file_url[x]),
destfile = file.path(path, metadata$media.files[x]),
quiet = TRUE,  mode = "wb", cacheOK = TRUE,
extra = getOption("download.file.extra"))
return (NULL)
} else if (metadata$repository[x] == "GBIF"){
download.file(
url = as.character(metadata$file_url[x]),
destfile = file.path(path, metadata$media.files[x]),
quiet = TRUE,  mode = "wb", cacheOK = TRUE,
extra = getOption("download.file.extra"))
return (NULL)
}
metadata$repository[x] == "GBIF"
download.file(metadata[1,],path = tempdir())
download.file(metadata[1,],destfile = tempdir())
download.file(metadata$file_url[1,],destfile = tempdir())
download.file(metadata$file_url[,1],destfile = tempdir())
download.file(metadata$file_url,destfile = tempdir())
metadata$file_url
metadata$file_url[1]
download.file(metadata$file_url[1],destfile = tempdir())
df1 <- query_wikiaves(term = 'Glaucis dohrnii', type = "audio")[1:2, ]
download_media(metadata = df1, path = "Home/Downloads")
path = "Home/Downloads"
destfile = file.path(path, metadata$media.files[1])
destfile
metadata
destfile = file.path(path, metadata$file_url[1])
destfile
source("~/Dropbox/R_package_testing/suwo/R/download_media.R")
df1 <- query_wikiaves(term = 'Glaucis dohrnii', type = "audio")[1:2, ]
download_media(metadata = df1, path = "Home/Downloads")
source("~/Dropbox/R_package_testing/suwo/R/download_media.R")
df1 <- query_wikiaves(term = 'Glaucis dohrnii', type = "audio")[1:2, ]
download_media(metadata = df1, path = "Home/Downloads")
download_media(metadata = df1, path = "neuro/Downloads")
download_media(metadata = df1, path = "~/Downloads")
source("~/Dropbox/R_package_testing/suwo/R/download_media.R")
download_media(metadata = df1, path = "~/Downloads")
test_that("search XC Phaethornis anthophilus default file names", {
a
df1 <- query_xenocanto(term = 'Phaethornis anthophilus')[1:2, ]
download_media(metadata = df1, path = tempdir())
fls <- list.files(path = tempdir(), pattern = "mp3$")
# remove files
unlink(file.path(tempdir(), fls))
expect_equal(fls, c("XC532163.mp3", "XC568491.mp3"))
})
test_that("search XC Phaethornis anthophilus default file names", {
df1 <- query_xenocanto(term = 'Phaethornis anthophilus')[1:2, ]
download_media(metadata = df1, path = tempdir())
fls <- list.files(path = tempdir(), pattern = "mp3$")
# remove files
unlink(file.path(tempdir(), fls))
expect_equal(fls, c("XC532163.mp3", "XC568491.mp3"))
})
source("~/Dropbox/R_package_testing/suwo/R/download_media.R")
df1 <- query_wikiaves(term = 'Glaucis dohrnii', type = "audio")[1:2, ]
download_media(metadata = df1, path = "~/Downloads")
download_media(metadata = df1, path = "~/Downloads")
fls <- list.files(path = tempdir(), pattern = "mp3$")
fls
source("~/Dropbox/R_package_testing/suwo/R/download_media.R")
download_media(metadata = df1, path = "~/Downloads")
destfile = file.path(path,"/" , metadata$url[1])
destfile
metadata
source("~/Dropbox/R_package_testing/suwo/R/download_media.R")
download_media(metadata = df1, path = "~/Downloads")
source("~/Dropbox/R_package_testing/suwo/R/download_media.R")
download_media(metadata = df1, path = "~/Downloads")
metadata
source("~/Dropbox/R_package_testing/suwo/R/download_media.R")
download_media(metadata = df1, path = "~/Downloads")
download_media(metadata = df1, path = tempdir())
fls <- list.files(path = tempdir(), pattern = "mp3$")
# remove files
unlink(file.path(tempdir(), fls))
expect_equal(fls, c("Glaucis-dohrnii-XC427418.mp3",
"Glaucis-dohrnii-XC618872.mp3"))
fls
df1 <- query_wikiaves(term = 'Glaucis dohrnii', type = "audio")[1:2, ]
download_media(metadata = df1, path = tempdir())
fls <- list.files(path = tempdir(), pattern = "mp3$")
fls
download_media(url = "https://s3.amazonaws.com/media.wikiaves.com.br/recordings/548/845065_025cc34ff36154e834a8240cb02fd261.mp3", destfile = "~/Downloads")
download_media(url = "https://s3.amazonaws.com/media.wikiaves.com.br/recordings/548/845065_025cc34ff36154e834a8240cb02fd261.mp3", destfile = "~/Downloads/output.mp3")
download_media(url = "https://s3.amazonaws.com/media.wikiaves.com.br/recordings/548/845065_025cc34ff36154e834a8240cb02fd261.mp3", destfile = "~/Downloads/https://s3.amazonaws.com/media.wikiaves.com.br/recordings/548/845065_025cc34ff36154e834a8240cb02fd261.mp3")
download_file(url = "https://s3.amazonaws.com/media.wikiaves.com.br/recordings/548/845065_025cc34ff36154e834a8240cb02fd261.mp3", destfile = "~/Downloads/https://s3.amazonaws.com/media.wikiaves.com.br/recordings/548/845065_025cc34ff36154e834a8240cb02fd261.mp3")
download.file(url = "https://s3.amazonaws.com/media.wikiaves.com.br/recordings/548/845065_025cc34ff36154e834a8240cb02fd261.mp3", destfile = "~/Downloads/https://s3.amazonaws.com/media.wikiaves.com.br/recordings/548/845065_025cc34ff36154e834a8240cb02fd261.mp3")
download.file(url = "https://s3.amazonaws.com/media.wikiaves.com.br/recordings/548/845065_025cc34ff36154e834a8240cb02fd261.mp3", destfile = "~/Downloads/out.mp3")
query_gbif("hirundo",type = "sound")
query_gbif("hirundo rustica",type = "sound")
query_gbif("Glaucis dohrnii",type = "sound")
source("~/Dropbox/R_package_testing/suwo/R/download_media.R")
df1 <- query_gbif(term = 'Glaucis dohrnii')[1:2, ]
download_media(metadata = df1, path = tempdir())
fls <- list.files(path = tempdir(), pattern = "mp3$")
fls
fls <- list.files(path = tempdir(), pattern = "mp3")
fls
tempdir()
fls <- list.files(path = tempdir())
fls
source("~/Dropbox/R_package_testing/suwo/R/download_media.R")
df1 <- query_gbif(term = 'Glaucis dohrnii')[1:2, ]
download_media(metadata = df1, path = tempdir())
source("~/Dropbox/R_package_testing/suwo/R/download_media.R")
source("~/Dropbox/R_package_testing/suwo/tests/testthat/test_download_media.R")
#delete NAMESPACE file
unlink("./NAMESPACE")
#run document twice
devtools::document(".")
