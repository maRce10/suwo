`Requires Token` = c("No", "No", "No", "Yes", "No", "No"),
`File Types` = c("sound, still image, moving image, interactive resource",
"sound, still image", "audio, photo, video",
"sound, still image", "sound, still image", "sound"),
`Taxonomic Range` = c("species", "species", "species, subspecies",
"species", "species", "species, genus, family"),
`Max Results` = rep("not specified", 6),
`Geographic Coverage` = c("worldwide", "worldwide", "worldwide",
"worldwide", "Brazil", "worldwide"),
`Additional Data` = c(
"key, datasetKey, publishingOrgKey, installationKey, hostingOrganizationKey, publishingCountry, protocol, lastCrawled, lastParsed, crawlId, basisOfRecord, occurrenceStatus, taxonKey, kingdomKey, phylumKey, classKey, orderKey, familyKey, genusKey, speciesKey, acceptedTaxonKey, scientificName, acceptedScientificName, kingdom, phylum, order, family, genus, species, genericName, specificEpithet, taxonRank, taxonomicStatus, iucnRedListCategory, dateIdentified, decimalLatitude, decimalLongitude, coordinateUncertaintyInMeters, continent, stateProvince, year, month, day, eventDate, modified, lastInterpreted, references, license, isInCluster, datasetName, recordedBy, identifiedBy, geodeticDatum, class, countryCode, country, rightsHolder, identifier, http...unknown.org.nick, verbatimEventDate, verbatimLocality, collectionCode, gbifID, occurrenceID, taxonID, catalogNumber, institutionCode, eventTime, occurrenceRemarks, http...unknown.org.captive, identificationID, identificationRemarks, distanceFromCentroidInMeters, informationWithheld, sex, lifeStage, preparations, nomenclaturalCode, dynamicProperties, locality, vernacularName, fieldNotes, verbatimElevation, behavior, higherClassification, associatedTaxa, infraspecificEpithet, media-type, media-format, media-references, media-created, media-creator, media-publisher, media-license, media-rightsHolder, file_url, media-description, page, elevation, elevationAccuracy, organismQuantity, organismQuantityType, georeferenceProtocol, verbatimSRS, county, verbatimCoordinateSystem, type, collectionID, individualCount, samplingProtocol, scientificNameID, georeferenceRemarks, language, georeferenceSources, media-title, repository"
,
"quality_grade, time_observed_at, taxon_geoprivacy, uuid, id, cached_votes_total, identifications_most_agree, species_guess, identifications_most_disagree, positional_accuracy, comments_count, site_id, created_time_zone, license_code, observed_time_zone, public_positional_accuracy, oauth_application_id, created_at, description, time_zone_offset, observed_on, observed_on_string, updated_at, captive, faves_count, num_identification_agreements, map_scale, uri, community_taxon_id, owners_identification_from_vision, identifications_count, obscured, num_identification_disagreements, geoprivacy, location, spam, mappable, identifications_some_agree, place_guess, file_url, attribution, page, repository"
,
"id, scientific_name, name, group, group_name, status, rarity, photo, info_text, permalink, determination_requirements, file_url, repository"
,
"id, scientific_name, name, group, group_name, status, rarity, photo, info_text, permalink, determination_requirements, file_url, repository"
,
"recording ID, media type, user ID, species ID, scientific name, common name, repository ID, author, user name, date, verified condition, location, location ID, comments, likes, visualizations, url, duration and repository"
,
"recording ID, Genus, Specific epithet, Subspecies, English name, Recordist, Country, Locality, Latitude, Longitude, Vocalization type, Audio file, License, URL, Quality, Time, Date, Sound files in .mp3"
),
stringsAsFactors = FALSE
)
query_summary |>
kbl(
caption = "Table: Summary of query functions and available metadata.",
format = "html",
escape = TRUE
) |>
kable_styling(
bootstrap_options = c("striped", "hover", "condensed", "responsive"),
full_width = FALSE,
position = "left"
)
head(query_summary)
dim(query_summary)
# Get occurrence data from GBIF
ectophylla_gbif <- query_gbif(term = "Ectophylla alba", type = "still image")
# Get observations from iNaturalist
ectophylla_inat <- query_inaturalist(term = "Ectophylla alba", type = "still image")
devtools::install()
query_summary[,-7]
query_summary[,-7] |>
kbl(
caption = "Table 1: Summary of query functions.",
format = "html",
escape = FALSE
) |>
kable_styling(
bootstrap_options = c("striped", "hover", "condensed", "responsive"),
full_width = FALSE,
position = "left"
)
query_summary[,c(1, 7)] |>
kbl(
caption = "Table 2: Summary of available metadata.",
format = "html",
escape = TRUE
) |>
kable_styling(
bootstrap_options = c("striped", "hover", "condensed", "responsive"),
full_width = FALSE,
position = "left"
)
query_summary[,-7] |>
kbl(
caption = "Table 1: Summary of query functions.",
format = "html",
escape = FALSE
) |>
kable_styling(
bootstrap_options = c("striped", "hover", "condensed", "responsive"),
full_width = FALSE,
position = "left"
)
query_summary
library(knitr)
library(kableExtra)
query_summary <- data.frame(
`Function` = c("query_gbif", "query_inaturalist", "query_macaulay",
"query_observation", "query_wikiaves", "query_xenocanto"),
`Requires Token` = c("No", "No", "No", "Yes", "No", "No"),
`File Types` = c("sound, still image, moving image, interactive resource",
"sound, still image", "audio, photo, video",
"sound, still image", "sound, still image", "sound"),
`Taxonomic Range` = c("species", "species", "species, subspecies",
"species", "species", "species, genus, family"),
`Max Results` = rep("not specified", 6),
`Geographic Coverage` = c("worldwide", "worldwide", "worldwide",
"worldwide", "Brazil", "worldwide"),
`Additional Data` = c(
"key, datasetKey, publishingOrgKey, installationKey, hostingOrganizationKey, publishingCountry, protocol, lastCrawled, lastParsed, crawlId, basisOfRecord, occurrenceStatus, taxonKey, kingdomKey, phylumKey, classKey, orderKey, familyKey, genusKey, speciesKey, acceptedTaxonKey, scientificName, acceptedScientificName, kingdom, phylum, order, family, genus, species, genericName, specificEpithet, taxonRank, taxonomicStatus, iucnRedListCategory, dateIdentified, decimalLatitude, decimalLongitude, coordinateUncertaintyInMeters, continent, stateProvince, year, month, day, eventDate, modified, lastInterpreted, references, license, isInCluster, datasetName, recordedBy, identifiedBy, geodeticDatum, class, countryCode, country, rightsHolder, identifier, http...unknown.org.nick, verbatimEventDate, verbatimLocality, collectionCode, gbifID, occurrenceID, taxonID, catalogNumber, institutionCode, eventTime, occurrenceRemarks, http...unknown.org.captive, identificationID, identificationRemarks, distanceFromCentroidInMeters, informationWithheld, sex, lifeStage, preparations, nomenclaturalCode, dynamicProperties, locality, vernacularName, fieldNotes, verbatimElevation, behavior, higherClassification, associatedTaxa, infraspecificEpithet, media-type, media-format, media-references, media-created, media-creator, media-publisher, media-license, media-rightsHolder, file_url, media-description, page, elevation, elevationAccuracy, organismQuantity, organismQuantityType, georeferenceProtocol, verbatimSRS, county, verbatimCoordinateSystem, type, collectionID, individualCount, samplingProtocol, scientificNameID, georeferenceRemarks, language, georeferenceSources, media-title, repository"
,
"quality_grade, time_observed_at, taxon_geoprivacy, uuid, id, cached_votes_total, identifications_most_agree, species_guess, identifications_most_disagree, positional_accuracy, comments_count, site_id, created_time_zone, license_code, observed_time_zone, public_positional_accuracy, oauth_application_id, created_at, description, time_zone_offset, observed_on, observed_on_string, updated_at, captive, faves_count, num_identification_agreements, map_scale, uri, community_taxon_id, owners_identification_from_vision, identifications_count, obscured, num_identification_disagreements, geoprivacy, location, spam, mappable, identifications_some_agree, place_guess, file_url, attribution, page, repository"
,
"id, scientific_name, name, group, group_name, status, rarity, photo, info_text, permalink, determination_requirements, file_url, repository"
,
"id, scientific_name, name, group, group_name, status, rarity, photo, info_text, permalink, determination_requirements, file_url, repository"
,
"recording ID, media type, user ID, species ID, scientific name, common name, repository ID, author, user name, date, verified condition, location, location ID, comments, likes, visualizations, url, duration and repository"
,
"recording ID, Genus, Specific epithet, Subspecies, English name, Recordist, Country, Locality, Latitude, Longitude, Vocalization type, Audio file, License, URL, Quality, Time, Date, Sound files in .mp3"
),
stringsAsFactors = FALSE,
check.names = FALSE
)
query_summary[,-7] |>
kbl(
caption = "Table 1: Summary of query functions.",
format = "html",
escape = TRUE
) |>
kable_styling(
bootstrap_options = c("striped", "hover", "condensed", "responsive"),
full_width = FALSE,
position = "left"
)
query_summary[,c(1, 7)] |>
kbl(
caption = "Table 2: Summary of available metadata.",
format = "html",
escape = TRUE
) |>
kable_styling(
bootstrap_options = c("striped", "hover", "condensed", "responsive"),
full_width = FALSE,
position = "left"
)
query_summary[,-7] |>
kbl(
caption = "Table 1: Summary of query functions.",
format = "html",
escape = TRUE
) |>
kable_styling(
bootstrap_options = c("striped", "hover", "condensed", "responsive"),
full_width = FALSE,
position = "left"
)
library(knitr)
library(kableExtra)
query_summary <- data.frame(
`Function` = c("query_gbif", "query_inaturalist", "query_macaulay",
"query_observation", "query_wikiaves", "query_xenocanto"),
`Repository` = c("GBIF", "iNaturalist", "Macaulay Library",
"Observation.org", "Wikiaves", "Xeno-Canto"),
`URL link` = c(
"https://www.gbif.org/",
"https://www.inaturalist.org/",
"https://www.macaulaylibrary.org/",
"https://observation.org/",
"https://www.wikiaves.com.br/",
"https://www.xeno-canto.org/"
),
`Requires Token` = c("No", "No", "No", "Yes", "No", "No"),
`File Types` = c("sound, still image, moving image, interactive resource",
"sound, still image", "audio, photo, video",
"sound, still image", "sound, still image", "sound"),
`Taxonomic Range` = c("species", "species", "species, subspecies",
"species", "species", "species, genus, family"),
`Max Results` = rep("not specified", 6),
`Geographic Coverage` = c("worldwide", "worldwide", "worldwide",
"worldwide", "Brazil", "worldwide"),
`Additional Data` = c(
"key, datasetKey, publishingOrgKey, installationKey, hostingOrganizationKey, publishingCountry, protocol, lastCrawled, lastParsed, crawlId, basisOfRecord, occurrenceStatus, taxonKey, kingdomKey, phylumKey, classKey, orderKey, familyKey, genusKey, speciesKey, acceptedTaxonKey, scientificName, acceptedScientificName, kingdom, phylum, order, family, genus, species, genericName, specificEpithet, taxonRank, taxonomicStatus, iucnRedListCategory, dateIdentified, decimalLatitude, decimalLongitude, coordinateUncertaintyInMeters, continent, stateProvince, year, month, day, eventDate, modified, lastInterpreted, references, license, isInCluster, datasetName, recordedBy, identifiedBy, geodeticDatum, class, countryCode, country, rightsHolder, identifier, http...unknown.org.nick, verbatimEventDate, verbatimLocality, collectionCode, gbifID, occurrenceID, taxonID, catalogNumber, institutionCode, eventTime, occurrenceRemarks, http...unknown.org.captive, identificationID, identificationRemarks, distanceFromCentroidInMeters, informationWithheld, sex, lifeStage, preparations, nomenclaturalCode, dynamicProperties, locality, vernacularName, fieldNotes, verbatimElevation, behavior, higherClassification, associatedTaxa, infraspecificEpithet, media-type, media-format, media-references, media-created, media-creator, media-publisher, media-license, media-rightsHolder, file_url, media-description, page, elevation, elevationAccuracy, organismQuantity, organismQuantityType, georeferenceProtocol, verbatimSRS, county, verbatimCoordinateSystem, type, collectionID, individualCount, samplingProtocol, scientificNameID, georeferenceRemarks, language, georeferenceSources, media-title, repository"
,
"quality_grade, time_observed_at, taxon_geoprivacy, uuid, id, cached_votes_total, identifications_most_agree, species_guess, identifications_most_disagree, positional_accuracy, comments_count, site_id, created_time_zone, license_code, observed_time_zone, public_positional_accuracy, oauth_application_id, created_at, description, time_zone_offset, observed_on, observed_on_string, updated_at, captive, faves_count, num_identification_agreements, map_scale, uri, community_taxon_id, owners_identification_from_vision, identifications_count, obscured, num_identification_disagreements, geoprivacy, location, spam, mappable, identifications_some_agree, place_guess, file_url, attribution, page, repository"
,
"id, scientific_name, name, group, group_name, status, rarity, photo, info_text, permalink, determination_requirements, file_url, repository"
,
"id, scientific_name, name, group, group_name, status, rarity, photo, info_text, permalink, determination_requirements, file_url, repository"
,
"recording ID, media type, user ID, species ID, scientific name, common name, repository ID, author, user name, date, verified condition, location, location ID, comments, likes, visualizations, url, duration and repository"
,
"recording ID, Genus, Specific epithet, Subspecies, English name, Recordist, Country, Locality, Latitude, Longitude, Vocalization type, Audio file, License, URL, Quality, Time, Date, Sound files in .mp3"
),
stringsAsFactors = FALSE,
check.names = FALSE
)
query_summary[,-7] |>
kbl(
caption = "Table 1: Summary of query functions.",
format = "html",
escape = TRUE
) |>
kable_styling(
bootstrap_options = c("striped", "hover", "condensed", "responsive"),
full_width = FALSE,
position = "left"
)
query_summary[,c(1, 7)] |>
kbl(
caption = "Table 2: Summary of available metadata.",
format = "html",
escape = TRUE
) |>
kable_styling(
bootstrap_options = c("striped", "hover", "condensed", "responsive"),
full_width = FALSE,
position = "left"
)
names(query_summary) != "Additional Data"
library(knitr)
library(kableExtra)
query_summary <- data.frame(
`Function` = c("query_gbif", "query_inaturalist", "query_macaulay",
"query_observation", "query_wikiaves", "query_xenocanto"),
`Repository` = c("GBIF", "iNaturalist", "Macaulay Library",
"Observation.org", "Wikiaves", "Xeno-Canto"),
`URL link` = c(
"https://www.gbif.org/",
"https://www.inaturalist.org/",
"https://www.macaulaylibrary.org/",
"https://observation.org/",
"https://www.wikiaves.com.br/",
"https://www.xeno-canto.org/"
),
`Requires Token` = c("No", "No", "No", "Yes", "No", "No"),
`File Types` = c("sound, still image, moving image, interactive resource",
"sound, still image", "audio, photo, video",
"sound, still image", "sound, still image", "sound"),
`Taxonomic Range` = c("species", "species", "species, subspecies",
"species", "species", "species, genus, family"),
`Max Results` = rep("not specified", 6),
`Geographic Coverage` = c("worldwide", "worldwide", "worldwide",
"worldwide", "Brazil", "worldwide"),
`Additional Data` = c(
"key, datasetKey, publishingOrgKey, installationKey, hostingOrganizationKey, publishingCountry, protocol, lastCrawled, lastParsed, crawlId, basisOfRecord, occurrenceStatus, taxonKey, kingdomKey, phylumKey, classKey, orderKey, familyKey, genusKey, speciesKey, acceptedTaxonKey, scientificName, acceptedScientificName, kingdom, phylum, order, family, genus, species, genericName, specificEpithet, taxonRank, taxonomicStatus, iucnRedListCategory, dateIdentified, decimalLatitude, decimalLongitude, coordinateUncertaintyInMeters, continent, stateProvince, year, month, day, eventDate, modified, lastInterpreted, references, license, isInCluster, datasetName, recordedBy, identifiedBy, geodeticDatum, class, countryCode, country, rightsHolder, identifier, http...unknown.org.nick, verbatimEventDate, verbatimLocality, collectionCode, gbifID, occurrenceID, taxonID, catalogNumber, institutionCode, eventTime, occurrenceRemarks, http...unknown.org.captive, identificationID, identificationRemarks, distanceFromCentroidInMeters, informationWithheld, sex, lifeStage, preparations, nomenclaturalCode, dynamicProperties, locality, vernacularName, fieldNotes, verbatimElevation, behavior, higherClassification, associatedTaxa, infraspecificEpithet, media-type, media-format, media-references, media-created, media-creator, media-publisher, media-license, media-rightsHolder, file_url, media-description, page, elevation, elevationAccuracy, organismQuantity, organismQuantityType, georeferenceProtocol, verbatimSRS, county, verbatimCoordinateSystem, type, collectionID, individualCount, samplingProtocol, scientificNameID, georeferenceRemarks, language, georeferenceSources, media-title, repository"
,
"quality_grade, time_observed_at, taxon_geoprivacy, uuid, id, cached_votes_total, identifications_most_agree, species_guess, identifications_most_disagree, positional_accuracy, comments_count, site_id, created_time_zone, license_code, observed_time_zone, public_positional_accuracy, oauth_application_id, created_at, description, time_zone_offset, observed_on, observed_on_string, updated_at, captive, faves_count, num_identification_agreements, map_scale, uri, community_taxon_id, owners_identification_from_vision, identifications_count, obscured, num_identification_disagreements, geoprivacy, location, spam, mappable, identifications_some_agree, place_guess, file_url, attribution, page, repository"
,
"id, scientific_name, name, group, group_name, status, rarity, photo, info_text, permalink, determination_requirements, file_url, repository"
,
"id, scientific_name, name, group, group_name, status, rarity, photo, info_text, permalink, determination_requirements, file_url, repository"
,
"recording ID, media type, user ID, species ID, scientific name, common name, repository ID, author, user name, date, verified condition, location, location ID, comments, likes, visualizations, url, duration and repository"
,
"recording ID, Genus, Specific epithet, Subspecies, English name, Recordist, Country, Locality, Latitude, Longitude, Vocalization type, Audio file, License, URL, Quality, Time, Date, Sound files in .mp3"
),
stringsAsFactors = FALSE,
check.names = FALSE
)
query_summary[, names(query_summary) != "Additional Data"] |>
kbl(
caption = "Table 1: Summary of query functions.",
format = "html",
escape = TRUE
) |>
kable_styling(
bootstrap_options = c("striped", "hover", "condensed", "responsive"),
full_width = FALSE,
position = "left"
)
query_summary[,c("Function", "Additional Data")] |>
kbl(
caption = "Table 2: Summary of available metadata.",
format = "html",
escape = TRUE
) |>
kable_styling(
bootstrap_options = c("striped", "hover", "condensed", "responsive"),
full_width = FALSE,
position = "left"
)
query_summary[, names(query_summary) != "Additional Data"] |>
kbl(
caption = "Table 1: Summary of query functions.",
format = "html",
escape = TRUE
) |>
kable_styling(
bootstrap_options = c("striped", "hover", "condensed", "responsive"),
full_width = FALSE,
position = "left"
)
query_summary$`URL link` <- kableExtra::cell_spec("link", "html", link = query_summary$`URL link`, new_tab = TRUE)
query_summary[, names(query_summary) != "Additional Data"] |>
kbl(
caption = "Table 1: Summary of query functions.",
format = "html",
escape = TRUE
) |>
kable_styling(
bootstrap_options = c("striped", "hover", "condensed", "responsive"),
full_width = FALSE,
position = "left"
)
query_summary$`URL link`
query_summary$`URL link` <- kableExtra::cell_spec("link", "html", link = query_summary$`URL link`, new_tab = TRUE)
query_summary[, names(query_summary) != "Additional Data"] |>
kbl(
caption = "Table 1: Summary of query functions.",
format = "html",
escape = TRUE
)
query_summary[, names(query_summary) != "Additional Data"] |>
kbl(
caption = "Table 1: Summary of query functions.",
format = "html",
escape = FALSE
) |>
kable_styling(
bootstrap_options = c("striped", "hover", "condensed", "responsive"),
full_width = FALSE,
position = "left"
)
library(knitr)
library(kableExtra)
query_summary <- data.frame(
`Function` = c("query_gbif", "query_inaturalist", "query_macaulay",
"query_observation", "query_wikiaves", "query_xenocanto"),
`Repository` = c("GBIF", "iNaturalist", "Macaulay Library",
"Observation.org", "Wikiaves", "Xeno-Canto"),
`URL link` = c(
"https://www.gbif.org/",
"https://www.inaturalist.org/",
"https://www.macaulaylibrary.org/",
"https://observation.org/",
"https://www.wikiaves.com.br/",
"https://www.xeno-canto.org/"
),
`Requires Token` = c("No", "No", "No", "Yes", "No", "No"),
`File Types` = c("sound, still image, moving image, interactive resource",
"sound, still image", "audio, photo, video",
"sound, still image", "sound, still image", "sound"),
`Taxonomic Range` = c("species", "species", "species, subspecies",
"species", "species", "species, genus, family"),
`Max Results` = rep("not specified", 6),
`Geographic Coverage` = c("worldwide", "worldwide", "worldwide",
"worldwide", "Brazil", "worldwide"),
`Additional Data` = c(
"key, datasetKey, publishingOrgKey, installationKey, hostingOrganizationKey, publishingCountry, protocol, lastCrawled, lastParsed, crawlId, basisOfRecord, occurrenceStatus, taxonKey, kingdomKey, phylumKey, classKey, orderKey, familyKey, genusKey, speciesKey, acceptedTaxonKey, scientificName, acceptedScientificName, kingdom, phylum, order, family, genus, species, genericName, specificEpithet, taxonRank, taxonomicStatus, iucnRedListCategory, dateIdentified, decimalLatitude, decimalLongitude, coordinateUncertaintyInMeters, continent, stateProvince, year, month, day, eventDate, modified, lastInterpreted, references, license, isInCluster, datasetName, recordedBy, identifiedBy, geodeticDatum, class, countryCode, country, rightsHolder, identifier, http...unknown.org.nick, verbatimEventDate, verbatimLocality, collectionCode, gbifID, occurrenceID, taxonID, catalogNumber, institutionCode, eventTime, occurrenceRemarks, http...unknown.org.captive, identificationID, identificationRemarks, distanceFromCentroidInMeters, informationWithheld, sex, lifeStage, preparations, nomenclaturalCode, dynamicProperties, locality, vernacularName, fieldNotes, verbatimElevation, behavior, higherClassification, associatedTaxa, infraspecificEpithet, media-type, media-format, media-references, media-created, media-creator, media-publisher, media-license, media-rightsHolder, file_url, media-description, page, elevation, elevationAccuracy, organismQuantity, organismQuantityType, georeferenceProtocol, verbatimSRS, county, verbatimCoordinateSystem, type, collectionID, individualCount, samplingProtocol, scientificNameID, georeferenceRemarks, language, georeferenceSources, media-title, repository"
,
"quality_grade, time_observed_at, taxon_geoprivacy, uuid, id, cached_votes_total, identifications_most_agree, species_guess, identifications_most_disagree, positional_accuracy, comments_count, site_id, created_time_zone, license_code, observed_time_zone, public_positional_accuracy, oauth_application_id, created_at, description, time_zone_offset, observed_on, observed_on_string, updated_at, captive, faves_count, num_identification_agreements, map_scale, uri, community_taxon_id, owners_identification_from_vision, identifications_count, obscured, num_identification_disagreements, geoprivacy, location, spam, mappable, identifications_some_agree, place_guess, file_url, attribution, page, repository"
,
"id, scientific_name, name, group, group_name, status, rarity, photo, info_text, permalink, determination_requirements, file_url, repository"
,
"id, scientific_name, name, group, group_name, status, rarity, photo, info_text, permalink, determination_requirements, file_url, repository"
,
"recording ID, media type, user ID, species ID, scientific name, common name, repository ID, author, user name, date, verified condition, location, location ID, comments, likes, visualizations, url, duration and repository"
,
"recording ID, Genus, Specific epithet, Subspecies, English name, Recordist, Country, Locality, Latitude, Longitude, Vocalization type, Audio file, License, URL, Quality, Time, Date, Sound files in .mp3"
),
stringsAsFactors = FALSE,
check.names = FALSE
)
query_summary$`URL link` <- kableExtra::cell_spec("link", "html", link = query_summary$`URL link`, new_tab = TRUE)
query_summary[, names(query_summary) != "Additional Data"] |>
kbl(
caption = "Table 1: Summary of query functions.",
format = "html",
escape = FALSE
) |>
kable_styling(
bootstrap_options = c("striped", "hover", "condensed", "responsive"),
full_width = FALSE,
position = "left"
)
query_summary[,c("Function", "Additional Data")] |>
kbl(
caption = "Table 2: Summary of available metadata.",
format = "html",
escape = TRUE
) |>
kable_styling(
bootstrap_options = c("striped", "hover", "condensed", "responsive"),
full_width = FALSE,
position = "left"
)
query_summary[, names(query_summary) != "Additional Data"] |>
kbl(
caption = "Table 1: Summary of query functions.",
format = "html",
escape = FALSE
) |>
kable_styling(
bootstrap_options = c("striped", "hover", "condensed", "responsive"),
full_width = FALSE,
position = "left"
)
library(knitr)
library(kableExtra)
query_summary <- data.frame(
`Function` = c("query_gbif", "query_inaturalist", "query_macaulay",
"query_observation", "query_wikiaves", "query_xenocanto"),
`Repository` = c("GBIF", "iNaturalist", "Macaulay Library",
"Observation.org", "Wikiaves", "Xeno-Canto"),
`URL link` = c(
"https://www.gbif.org/",
"https://www.inaturalist.org/",
"https://www.macaulaylibrary.org/",
"https://observation.org/",
"https://www.wikiaves.com.br/",
"https://www.xeno-canto.org/"
),
`Requires Token` = c("No", "No", "No", "Yes", "No", "No"),
`File Types` = c("sound, still image, moving image, interactive resource",
"sound, still image", "audio, photo, video",
"sound, still image", "sound, still image", "sound"),
`Taxonomic Range` = c("species", "species", "species, subspecies",
"species", "species", "species, genus, family"),
`Max Results` = rep("not specified", 6),
`Geographic Coverage` = c("worldwide", "worldwide", "worldwide",
"worldwide", "Brazil", "worldwide"),
`Additional Data` = c(
"key, datasetKey, publishingOrgKey, installationKey, hostingOrganizationKey, publishingCountry, protocol, lastCrawled, lastParsed, crawlId, basisOfRecord, occurrenceStatus, taxonKey, kingdomKey, phylumKey, classKey, orderKey, familyKey, genusKey, speciesKey, acceptedTaxonKey, scientificName, acceptedScientificName, kingdom, phylum, order, family, genus, species, genericName, specificEpithet, taxonRank, taxonomicStatus, iucnRedListCategory, dateIdentified, decimalLatitude, decimalLongitude, coordinateUncertaintyInMeters, continent, stateProvince, year, month, day, eventDate, modified, lastInterpreted, references, license, isInCluster, datasetName, recordedBy, identifiedBy, geodeticDatum, class, countryCode, country, rightsHolder, identifier, http...unknown.org.nick, verbatimEventDate, verbatimLocality, collectionCode, gbifID, occurrenceID, taxonID, catalogNumber, institutionCode, eventTime, occurrenceRemarks, http...unknown.org.captive, identificationID, identificationRemarks, distanceFromCentroidInMeters, informationWithheld, sex, lifeStage, preparations, nomenclaturalCode, dynamicProperties, locality, vernacularName, fieldNotes, verbatimElevation, behavior, higherClassification, associatedTaxa, infraspecificEpithet, media-type, media-format, media-references, media-created, media-creator, media-publisher, media-license, media-rightsHolder, file_url, media-description, page, elevation, elevationAccuracy, organismQuantity, organismQuantityType, georeferenceProtocol, verbatimSRS, county, verbatimCoordinateSystem, type, collectionID, individualCount, samplingProtocol, scientificNameID, georeferenceRemarks, language, georeferenceSources, media-title, repository"
,
"quality_grade, time_observed_at, taxon_geoprivacy, uuid, id, cached_votes_total, identifications_most_agree, species_guess, identifications_most_disagree, positional_accuracy, comments_count, site_id, created_time_zone, license_code, observed_time_zone, public_positional_accuracy, oauth_application_id, created_at, description, time_zone_offset, observed_on, observed_on_string, updated_at, captive, faves_count, num_identification_agreements, map_scale, uri, community_taxon_id, owners_identification_from_vision, identifications_count, obscured, num_identification_disagreements, geoprivacy, location, spam, mappable, identifications_some_agree, place_guess, file_url, attribution, page, repository"
,
"id, scientific_name, name, group, group_name, status, rarity, photo, info_text, permalink, determination_requirements, file_url, repository"
,
"id, scientific_name, name, group, group_name, status, rarity, photo, info_text, permalink, determination_requirements, file_url, repository"
,
"recording ID, media type, user ID, species ID, scientific name, common name, repository ID, author, user name, date, verified condition, location, location ID, comments, likes, visualizations, url, duration and repository"
,
"recording ID, Genus, Specific epithet, Subspecies, English name, Recordist, Country, Locality, Latitude, Longitude, Vocalization type, Audio file, License, URL, Quality, Time, Date, Sound files in .mp3"
),
stringsAsFactors = FALSE,
check.names = FALSE
)
query_summary$`URL link` <- kableExtra::cell_spec(query_summary$`URL link`, "html", link = query_summary$`URL link`, new_tab = TRUE)
query_summary[, names(query_summary) != "Additional Data"] |>
kbl(
caption = "Table 1: Summary of query functions.",
format = "html",
escape = FALSE
) |>
kable_styling(
bootstrap_options = c("striped", "hover", "condensed", "responsive"),
full_width = FALSE,
position = "left"
)
query_summary[,c("Function", "Additional Data")] |>
kbl(
caption = "Table 2: Summary of available metadata.",
format = "html",
escape = TRUE
) |>
kable_styling(
bootstrap_options = c("striped", "hover", "condensed", "responsive"),
full_width = FALSE,
position = "left"
)
query_summary[, names(query_summary) != "Additional Data"] |>
kbl(
caption = "Table 1: Summary of query functions.",
format = "html",
escape = FALSE
) |>
kable_styling(
bootstrap_options = c("striped", "hover", "condensed", "responsive"),
full_width = FALSE,
position = "left"
)
Merged_Dataframe <- detect_duplicates(X = ectophylla_gbif, Y = ectophylla_inat)
library(suwo)
Merged_Dataframe <- detect_duplicates(X = ectophylla_gbif, Y = ectophylla_inat)
# Get occurrence data from GBIF
ectophylla_gbif <- query_gbif(term = "Ectophylla alba", type = "still image")
# Get observations from iNaturalist
ectophylla_inat <- query_inaturalist(term = "Ectophylla alba", type = "still image")
# Get audio recordings from xeno-canto
ectophylla_xc <- query_xenocanto(term = "Ectophylla alba")
kable_styling(
kable(head(ectophylla_gbif, 2), caption = "First 2 rows from GBIF"),
bootstrap_options = c("striped", "hover"),
full_width = FALSE
)
kable_styling(
kable(head(ectophylla_inat, 2), caption = "First 2 rows from iNaturalist"),
bootstrap_options = c("striped", "hover"),
full_width = FALSE
)
kable_styling(
kable(head(ectophylla_xc, 2), caption = "First 2 rows from Xeno-Canto"),
bootstrap_options = c("striped", "hover"),
full_width = FALSE
)
Merged_Dataframe <- detect_duplicates(X = ectophylla_gbif, Y = ectophylla_inat)
# no overlap
overlapping_sels(X = lbh_selec_table)
library(warbleR)
# no overlap
overlapping_sels(X = lbh_selec_table)
# modified lbh_selec_table to make the first and second selection overlap
Y <- lbh_selec_table
Y$end[4] <- 1.5
overlapping_sels(X = Y)
Y$end[11] <- 1.6
overlapping_sels(X = Y)
# get index instead
overlapping_sels(X = Y, index = TRUE)
# drop overlapping
overlapping_sels(X = Y, drop = TRUE)
overlapping_sels(X = Y, indx.row = TRUE)
# create map
map_locations(ectophylla_inat)
ectophylla_gbif
attr(ectophylla_gbif)
attributes(ectophylla_gbif)
source("~/Dropbox/R_package_testing/suwo/R/query_gbif.R")
# Get occurrence data from GBIF
ectophylla_gbif <- query_gbif(term = "Ectophylla alba", type = "still image")
library(suwo)
# Get occurrence data from GBIF
ectophylla_gbif <- query_gbif(term = "Ectophylla alba", type = "still image")
source("~/Dropbox/R_package_testing/suwo/R/internal_functions.R")
# Get occurrence data from GBIF
ectophylla_gbif <- query_gbif(term = "Ectophylla alba", type = "still image")
attributes(ectophylla_gbif)
lbh.est
